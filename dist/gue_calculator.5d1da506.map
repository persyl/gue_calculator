{"version":3,"sources":["../src/preact.js","../src/vnode.js","../src/options.js","../src/h.js","../src/util.js","../src/clone-element.js","../src/constants.js","../src/render-queue.js","../src/vdom/index.js","../src/dom/index.js","../src/vdom/diff.js","../src/vdom/component-recycler.js","../src/vdom/component.js","../src/component.js","../src/render.js","components/ascent/gas-strategy.js","components/ascent/result.js","components/ascent/ascent.js","index.js"],"names":["VNode","options","stack","EMPTY_CHILDREN","h","nodeName","attributes","children","lastSimple","child","simple","i","arguments","length","push","pop","undefined","String","p","key","vnode","extend","obj","props","defer","Promise","resolve","then","bind","setTimeout","cloneElement","slice","call","NO_RENDER","SYNC_RENDER","FORCE_RENDER","ASYNC_RENDER","IS_NON_DIMENSIONAL","items","enqueueRender","component","_dirty","rerender","list","isSameNodeType","node","_componentConstructor","isNamedNode","normalizedNodeName","defaultProps","document","createElementNS","removeNode","parentNode","setAccessor","old","name","value","style","innerHTML","__html","useCapture","_listeners","removeChild","ns","eventProxy","mounts","diffLevel","hydrating","flushMounts","c","ret","parent","componentRoot","prevSvgMode","ATTR_KEY","out","buildComponentFromVNode","vnodeName","dom","firstChild","appendChild","nodeValue","vchildren","context","mountAll","originalChildren","keyed","min","len","childrenLen","vlen","j","f","vchild","keyedLen","unmountOnly","next","previousSibling","diffAttributes","attrs","recyclerComponents","createComponent","Ctor","prototype","constructor","nextBase","doRender","setComponentProps","_disable","componentWillReceiveProps","prevContext","renderMode","syncComponentUpdates","previousProps","previousState","renderComponent","state","isUpdate","base","initialBase","snapshot","rendered","inst","cbase","shouldComponentUpdate","prevProps","render","getSnapshotBeforeUpdate","childComponent","childProps","getNodeProps","initialChildComponent","baseParent","replaceChild","_component","toUnmount","componentRef","t","unshift","afterUpdate","_renderCallbacks","isChild","originalComponent","oldDom","isOwner","beforeUnmount","componentWillUnmount","__ref","callback","diff","AllAvailable","RuleOfHalf","RuleOfThird","Result","totalAscentTime","litersNeeded","amountOfDivers","calculate","Component","nextProps","nextState","isNaN","maxDepth","calculateAscentTime","calculateMinimumGasLiters","calculateGas","metresUpTo15","timeTo15","Math","ceil","averageDepthATA","floor","cylinderBarCapacity","d12","getMinBar","s12","d11","s11","d10","s10","minimumBarNeeded","minBar","usableGas","cylinderLitres","minimumBars","container","text","h2","renderMinGasText","renderUsableGasText","minBarValue","usableGasValue","gasStrategy","GasStrategy","modifiedUsableGas","turnPressure","backgroundColor","padding","borderRadius","fontSize","fontFamily","marginBottom","margin","Ascent","onDepthChange","onCylinderBarCapacityChange","onGasStrategyChange","event","parsedInput","parseInt","target","e","setState","input","select","color","border","minWidth","marginRight","GueApp","getElementById"],"mappings":"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","file":"gue_calculator.5d1da506.map","sourceRoot":"..","sourcesContent":["import { h, h as createElement } from './h';\nimport { cloneElement } from './clone-element';\nimport { Component } from './component';\nimport { render } from './render';\nimport { rerender } from './render-queue';\nimport options from './options';\n\nexport default {\n\th,\n\tcreateElement,\n\tcloneElement,\n\tComponent,\n\trender,\n\trerender,\n\toptions\n};\n\nexport {\n\th,\n\tcreateElement,\n\tcloneElement,\n\tComponent,\n\trender,\n\trerender,\n\toptions\n};\n","/**\n * Virtual DOM Node\n * @typedef VNode\n * @property {string | function} nodeName The string of the DOM node to create or Component constructor to render\n * @property {Array<VNode | string>} children The children of node\n * @property {string | number | undefined} key The key used to identify this VNode in a list\n * @property {object} attributes The properties of this VNode\n */\nexport const VNode = function VNode() {};\n","/**\n * @typedef {import('./component').Component} Component\n * @typedef {import('./vnode').VNode} VNode\n */\n\n/**\n * Global options\n * @public\n * @typedef Options\n * @property {boolean} [syncComponentUpdates] If `true`, `prop` changes trigger synchronous component updates. Defaults to true.\n * @property {(vnode: VNode) => void} [vnode] Processes all created VNodes.\n * @property {(component: Component) => void} [afterMount] Hook invoked after a component is mounted.\n * @property {(component: Component) => void} [afterUpdate] Hook invoked after the DOM is updated with a component's latest render.\n * @property {(component: Component) => void} [beforeUnmount] Hook invoked immediately before a component is unmounted.\n * @property {(rerender: function) => void} [debounceRendering] Hook invoked whenever a rerender is requested. Can be used to debounce rerenders.\n * @property {(event: Event) => Event | void} [event] Hook invoked before any Preact event listeners. The return value (if any) replaces the native browser event given to event listeners\n */\n\n/** @type {Options}  */\nconst options = {};\n\nexport default options;\n","import { VNode } from './vnode';\nimport options from './options';\n\n\nconst stack = [];\n\nconst EMPTY_CHILDREN = [];\n\n/**\n * JSX/hyperscript reviver.\n * @see http://jasonformat.com/wtf-is-jsx\n * Benchmarks: https://esbench.com/bench/57ee8f8e330ab09900a1a1a0\n *\n * Note: this is exported as both `h()` and `createElement()` for compatibility\n * reasons.\n *\n * Creates a VNode (virtual DOM element). A tree of VNodes can be used as a\n * lightweight representation of the structure of a DOM tree. This structure can\n * be realized by recursively comparing it against the current _actual_ DOM\n * structure, and applying only the differences.\n *\n * `h()`/`createElement()` accepts an element name, a list of attributes/props,\n * and optionally children to append to the element.\n *\n * @example The following DOM tree\n *\n * `<div id=\"foo\" name=\"bar\">Hello!</div>`\n *\n * can be constructed using this function as:\n *\n * `h('div', { id: 'foo', name : 'bar' }, 'Hello!');`\n *\n * @param {string | function} nodeName An element name. Ex: `div`, `a`, `span`, etc.\n * @param {object | null} attributes Any attributes/props to set on the created element.\n * @param {VNode[]} [rest] Additional arguments are taken to be children to\n *  append. Can be infinitely nested Arrays.\n *\n * @public\n */\nexport function h(nodeName, attributes) {\n\tlet children=EMPTY_CHILDREN, lastSimple, child, simple, i;\n\tfor (i=arguments.length; i-- > 2; ) {\n\t\tstack.push(arguments[i]);\n\t}\n\tif (attributes && attributes.children!=null) {\n\t\tif (!stack.length) stack.push(attributes.children);\n\t\tdelete attributes.children;\n\t}\n\twhile (stack.length) {\n\t\tif ((child = stack.pop()) && child.pop!==undefined) {\n\t\t\tfor (i=child.length; i--; ) stack.push(child[i]);\n\t\t}\n\t\telse {\n\t\t\tif (typeof child==='boolean') child = null;\n\n\t\t\tif ((simple = typeof nodeName!=='function')) {\n\t\t\t\tif (child==null) child = '';\n\t\t\t\telse if (typeof child==='number') child = String(child);\n\t\t\t\telse if (typeof child!=='string') simple = false;\n\t\t\t}\n\n\t\t\tif (simple && lastSimple) {\n\t\t\t\tchildren[children.length-1] += child;\n\t\t\t}\n\t\t\telse if (children===EMPTY_CHILDREN) {\n\t\t\t\tchildren = [child];\n\t\t\t}\n\t\t\telse {\n\t\t\t\tchildren.push(child);\n\t\t\t}\n\n\t\t\tlastSimple = simple;\n\t\t}\n\t}\n\n\tlet p = new VNode();\n\tp.nodeName = nodeName;\n\tp.children = children;\n\tp.attributes = attributes==null ? undefined : attributes;\n\tp.key = attributes==null ? undefined : attributes.key;\n\n\t// if a \"vnode hook\" is defined, pass every created VNode to it\n\tif (options.vnode!==undefined) options.vnode(p);\n\n\treturn p;\n}\n","/**\n * Copy all properties from `props` onto `obj`.\n * @param {object} obj Object onto which properties should be copied.\n * @param {object} props Object from which to copy properties.\n * @returns {object}\n * @private\n */\nexport function extend(obj, props) {\n\tfor (let i in props) obj[i] = props[i];\n\treturn obj;\n}\n\n/**\n * Call a function asynchronously, as soon as possible. Makes\n * use of HTML Promise to schedule the callback if available,\n * otherwise falling back to `setTimeout` (mainly for IE<11).\n * @type {(callback: function) => void}\n */\nexport const defer = typeof Promise=='function' ? Promise.resolve().then.bind(Promise.resolve()) : setTimeout;\n","import { extend } from './util';\nimport { h } from './h';\n\n/**\n * Clones the given VNode, optionally adding attributes/props and replacing its\n * children.\n * @param {import('./vnode').VNode} vnode The virtual DOM element to clone\n * @param {object} props Attributes/props to add when cloning\n * @param {Array<import('./vnode').VNode>} [rest] Any additional arguments will be used as replacement\n *  children.\n */\nexport function cloneElement(vnode, props) {\n\treturn h(\n\t\tvnode.nodeName,\n\t\textend(extend({}, vnode.attributes), props),\n\t\targuments.length>2 ? [].slice.call(arguments, 2) : vnode.children\n\t);\n}\n","// render modes\n\n/** Do not re-render a component */\nexport const NO_RENDER = 0;\n/** Synchronously re-render a component and its children */\nexport const SYNC_RENDER = 1;\n/** Synchronously re-render a component, even if its lifecycle methods attempt to prevent it. */\nexport const FORCE_RENDER = 2;\n/** Queue asynchronous re-render of a component and it's children */\nexport const ASYNC_RENDER = 3;\n\n\nexport const ATTR_KEY = '__preactattr_';\n\n/** DOM properties that should NOT have \"px\" added when numeric */\nexport const IS_NON_DIMENSIONAL = /acit|ex(?:s|g|n|p|$)|rph|ows|mnc|ntw|ine[ch]|zoo|^ord/i;\n\n","import options from './options';\nimport { defer } from './util';\nimport { renderComponent } from './vdom/component';\n\n/**\n * Managed queue of dirty components to be re-rendered\n * @type {Array<import('./component').Component>}\n */\nlet items = [];\n\n/**\n * Enqueue a rerender of a component\n * @param {import('./component').Component} component The component to rerender\n */\nexport function enqueueRender(component) {\n\tif (!component._dirty && (component._dirty = true) && items.push(component)==1) {\n\t\t(options.debounceRendering || defer)(rerender);\n\t}\n}\n\n/** Rerender all enqueued dirty components */\nexport function rerender() {\n\tlet p, list = items;\n\titems = [];\n\twhile ( (p = list.pop()) ) {\n\t\tif (p._dirty) renderComponent(p);\n\t}\n}\n","import { extend } from '../util';\n\n\n/**\n * Check if two nodes are equivalent.\n * @param {import('../dom').PreactElement} node DOM Node to compare\n * @param {import('../vnode').VNode} vnode Virtual DOM node to compare\n * @param {boolean} [hydrating=false] If true, ignores component constructors\n *  when comparing.\n * @private\n */\nexport function isSameNodeType(node, vnode, hydrating) {\n\tif (typeof vnode==='string' || typeof vnode==='number') {\n\t\treturn node.splitText!==undefined;\n\t}\n\tif (typeof vnode.nodeName==='string') {\n\t\treturn !node._componentConstructor && isNamedNode(node, vnode.nodeName);\n\t}\n\treturn hydrating || node._componentConstructor===vnode.nodeName;\n}\n\n\n/**\n * Check if an Element has a given nodeName, case-insensitively.\n * @param {import('../dom').PreactElement} node A DOM Element to inspect the name of.\n * @param {string} nodeName Unnormalized name to compare against.\n */\nexport function isNamedNode(node, nodeName) {\n\treturn node.normalizedNodeName===nodeName || node.nodeName.toLowerCase()===nodeName.toLowerCase();\n}\n\n\n/**\n * Reconstruct Component-style `props` from a VNode.\n * Ensures default/fallback values from `defaultProps`:\n * Own-properties of `defaultProps` not present in `vnode.attributes` are added.\n * @param {import('../vnode').VNode} vnode The VNode to get props for\n * @returns {object} The props to use for this VNode\n */\nexport function getNodeProps(vnode) {\n\tlet props = extend({}, vnode.attributes);\n\tprops.children = vnode.children;\n\n\tlet defaultProps = vnode.nodeName.defaultProps;\n\tif (defaultProps!==undefined) {\n\t\tfor (let i in defaultProps) {\n\t\t\tif (props[i]===undefined) {\n\t\t\t\tprops[i] = defaultProps[i];\n\t\t\t}\n\t\t}\n\t}\n\n\treturn props;\n}\n","import { IS_NON_DIMENSIONAL } from '../constants';\nimport options from '../options';\n\n/**\n * A DOM event listener\n * @typedef {(e: Event) => void} EventListner\n */\n\n/**\n * A mapping of event types to event listeners\n * @typedef {Object.<string, EventListener>} EventListenerMap\n */\n\n/**\n * Properties Preact adds to elements it creates\n * @typedef PreactElementExtensions\n * @property {string} [normalizedNodeName] A normalized node name to use in diffing\n * @property {EventListenerMap} [_listeners] A map of event listeners added by components to this DOM node\n * @property {import('../component').Component} [_component] The component that rendered this DOM node\n * @property {function} [_componentConstructor] The constructor of the component that rendered this DOM node\n */\n\n/**\n * A DOM element that has been extended with Preact properties\n * @typedef {Element & ElementCSSInlineStyle & PreactElementExtensions} PreactElement\n */\n\n/**\n * Create an element with the given nodeName.\n * @param {string} nodeName The DOM node to create\n * @param {boolean} [isSvg=false] If `true`, creates an element within the SVG\n *  namespace.\n * @returns {PreactElement} The created DOM node\n */\nexport function createNode(nodeName, isSvg) {\n\t/** @type {PreactElement} */\n\tlet node = isSvg ? document.createElementNS('http://www.w3.org/2000/svg', nodeName) : document.createElement(nodeName);\n\tnode.normalizedNodeName = nodeName;\n\treturn node;\n}\n\n\n/**\n * Remove a child node from its parent if attached.\n * @param {Node} node The node to remove\n */\nexport function removeNode(node) {\n\tlet parentNode = node.parentNode;\n\tif (parentNode) parentNode.removeChild(node);\n}\n\n\n/**\n * Set a named attribute on the given Node, with special behavior for some names\n * and event handlers. If `value` is `null`, the attribute/handler will be\n * removed.\n * @param {PreactElement} node An element to mutate\n * @param {string} name The name/key to set, such as an event or attribute name\n * @param {*} old The last value that was set for this name/node pair\n * @param {*} value An attribute value, such as a function to be used as an\n *  event handler\n * @param {boolean} isSvg Are we currently diffing inside an svg?\n * @private\n */\nexport function setAccessor(node, name, old, value, isSvg) {\n\tif (name==='className') name = 'class';\n\n\n\tif (name==='key') {\n\t\t// ignore\n\t}\n\telse if (name==='ref') {\n\t\tif (old) old(null);\n\t\tif (value) value(node);\n\t}\n\telse if (name==='class' && !isSvg) {\n\t\tnode.className = value || '';\n\t}\n\telse if (name==='style') {\n\t\tif (!value || typeof value==='string' || typeof old==='string') {\n\t\t\tnode.style.cssText = value || '';\n\t\t}\n\t\tif (value && typeof value==='object') {\n\t\t\tif (typeof old!=='string') {\n\t\t\t\tfor (let i in old) if (!(i in value)) node.style[i] = '';\n\t\t\t}\n\t\t\tfor (let i in value) {\n\t\t\t\tnode.style[i] = typeof value[i]==='number' && IS_NON_DIMENSIONAL.test(i)===false ? (value[i]+'px') : value[i];\n\t\t\t}\n\t\t}\n\t}\n\telse if (name==='dangerouslySetInnerHTML') {\n\t\tif (value) node.innerHTML = value.__html || '';\n\t}\n\telse if (name[0]=='o' && name[1]=='n') {\n\t\tlet useCapture = name !== (name=name.replace(/Capture$/, ''));\n\t\tname = name.toLowerCase().substring(2);\n\t\tif (value) {\n\t\t\tif (!old) node.addEventListener(name, eventProxy, useCapture);\n\t\t}\n\t\telse {\n\t\t\tnode.removeEventListener(name, eventProxy, useCapture);\n\t\t}\n\t\t(node._listeners || (node._listeners = {}))[name] = value;\n\t}\n\telse if (name!=='list' && name!=='type' && !isSvg && name in node) {\n\t\t// Attempt to set a DOM property to the given value.\n\t\t// IE & FF throw for certain property-value combinations.\n\t\ttry {\n\t\t\tnode[name] = value==null ? '' : value;\n\t\t} catch (e) { }\n\t\tif ((value==null || value===false) && name!='spellcheck') node.removeAttribute(name);\n\t}\n\telse {\n\t\tlet ns = isSvg && (name !== (name = name.replace(/^xlink:?/, '')));\n\t\t// spellcheck is treated differently than all other boolean values and\n\t\t// should not be removed when the value is `false`. See:\n\t\t// https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#attr-spellcheck\n\t\tif (value==null || value===false) {\n\t\t\tif (ns) node.removeAttributeNS('http://www.w3.org/1999/xlink', name.toLowerCase());\n\t\t\telse node.removeAttribute(name);\n\t\t}\n\t\telse if (typeof value!=='function') {\n\t\t\tif (ns) node.setAttributeNS('http://www.w3.org/1999/xlink', name.toLowerCase(), value);\n\t\t\telse node.setAttribute(name, value);\n\t\t}\n\t}\n}\n\n\n/**\n * Proxy an event to hooked event handlers\n * @param {Event} e The event object from the browser\n * @private\n */\nfunction eventProxy(e) {\n\treturn this._listeners[e.type](options.event && options.event(e) || e);\n}\n","import { ATTR_KEY } from '../constants';\nimport { isSameNodeType, isNamedNode } from './index';\nimport { buildComponentFromVNode } from './component';\nimport { createNode, setAccessor } from '../dom/index';\nimport { unmountComponent } from './component';\nimport options from '../options';\nimport { removeNode } from '../dom/index';\n\n/**\n * Queue of components that have been mounted and are awaiting componentDidMount\n * @type {Array<import('../component').Component>}\n */\nexport const mounts = [];\n\n/** Diff recursion count, used to track the end of the diff cycle. */\nexport let diffLevel = 0;\n\n/** Global flag indicating if the diff is currently within an SVG */\nlet isSvgMode = false;\n\n/** Global flag indicating if the diff is performing hydration */\nlet hydrating = false;\n\n/** Invoke queued componentDidMount lifecycle methods */\nexport function flushMounts() {\n\tlet c;\n\twhile ((c=mounts.pop())) {\n\t\tif (options.afterMount) options.afterMount(c);\n\t\tif (c.componentDidMount) c.componentDidMount();\n\t}\n}\n\n\n/**\n * Apply differences in a given vnode (and it's deep children) to a real DOM Node.\n * @param {import('../dom').PreactElement} dom A DOM node to mutate into the shape of a `vnode`\n * @param {import('../vnode').VNode} vnode A VNode (with descendants forming a tree) representing\n *  the desired DOM structure\n * @param {object} context The current context\n * @param {boolean} mountAll Whether or not to immediately mount all components\n * @param {Element} parent ?\n * @param {boolean} componentRoot ?\n * @returns {import('../dom').PreactElement} The created/mutated element\n * @private\n */\nexport function diff(dom, vnode, context, mountAll, parent, componentRoot) {\n\t// diffLevel having been 0 here indicates initial entry into the diff (not a subdiff)\n\tif (!diffLevel++) {\n\t\t// when first starting the diff, check if we're diffing an SVG or within an SVG\n\t\tisSvgMode = parent!=null && parent.ownerSVGElement!==undefined;\n\n\t\t// hydration is indicated by the existing element to be diffed not having a prop cache\n\t\thydrating = dom!=null && !(ATTR_KEY in dom);\n\t}\n\n\tlet ret = idiff(dom, vnode, context, mountAll, componentRoot);\n\n\t// append the element if its a new parent\n\tif (parent && ret.parentNode!==parent) parent.appendChild(ret);\n\n\t// diffLevel being reduced to 0 means we're exiting the diff\n\tif (!--diffLevel) {\n\t\thydrating = false;\n\t\t// invoke queued componentDidMount lifecycle methods\n\t\tif (!componentRoot) flushMounts();\n\t}\n\n\treturn ret;\n}\n\n\n/**\n * Internals of `diff()`, separated to allow bypassing diffLevel / mount flushing.\n * @param {import('../dom').PreactElement} dom A DOM node to mutate into the shape of a `vnode`\n * @param {import('../vnode').VNode} vnode A VNode (with descendants forming a tree) representing the desired DOM structure\n * @param {object} context The current context\n * @param {boolean} mountAll Whether or not to immediately mount all components\n * @param {boolean} [componentRoot] ?\n * @private\n */\nfunction idiff(dom, vnode, context, mountAll, componentRoot) {\n\tlet out = dom,\n\t\tprevSvgMode = isSvgMode;\n\n\t// empty values (null, undefined, booleans) render as empty Text nodes\n\tif (vnode==null || typeof vnode==='boolean') vnode = '';\n\n\n\t// Fast case: Strings & Numbers create/update Text nodes.\n\tif (typeof vnode==='string' || typeof vnode==='number') {\n\n\t\t// update if it's already a Text node:\n\t\tif (dom && dom.splitText!==undefined && dom.parentNode && (!dom._component || componentRoot)) {\n\t\t\t/* istanbul ignore if */ /* Browser quirk that can't be covered: https://github.com/developit/preact/commit/fd4f21f5c45dfd75151bd27b4c217d8003aa5eb9 */\n\t\t\tif (dom.nodeValue!=vnode) {\n\t\t\t\tdom.nodeValue = vnode;\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\t// it wasn't a Text node: replace it with one and recycle the old Element\n\t\t\tout = document.createTextNode(vnode);\n\t\t\tif (dom) {\n\t\t\t\tif (dom.parentNode) dom.parentNode.replaceChild(out, dom);\n\t\t\t\trecollectNodeTree(dom, true);\n\t\t\t}\n\t\t}\n\n\t\tout[ATTR_KEY] = true;\n\n\t\treturn out;\n\t}\n\n\n\t// If the VNode represents a Component, perform a component diff:\n\tlet vnodeName = vnode.nodeName;\n\tif (typeof vnodeName==='function') {\n\t\treturn buildComponentFromVNode(dom, vnode, context, mountAll);\n\t}\n\n\n\t// Tracks entering and exiting SVG namespace when descending through the tree.\n\tisSvgMode = vnodeName==='svg' ? true : vnodeName==='foreignObject' ? false : isSvgMode;\n\n\n\t// If there's no existing element or it's the wrong type, create a new one:\n\tvnodeName = String(vnodeName);\n\tif (!dom || !isNamedNode(dom, vnodeName)) {\n\t\tout = createNode(vnodeName, isSvgMode);\n\n\t\tif (dom) {\n\t\t\t// move children into the replacement node\n\t\t\twhile (dom.firstChild) out.appendChild(dom.firstChild);\n\n\t\t\t// if the previous Element was mounted into the DOM, replace it inline\n\t\t\tif (dom.parentNode) dom.parentNode.replaceChild(out, dom);\n\n\t\t\t// recycle the old element (skips non-Element node types)\n\t\t\trecollectNodeTree(dom, true);\n\t\t}\n\t}\n\n\n\tlet fc = out.firstChild,\n\t\tprops = out[ATTR_KEY],\n\t\tvchildren = vnode.children;\n\n\tif (props==null) {\n\t\tprops = out[ATTR_KEY] = {};\n\t\tfor (let a=out.attributes, i=a.length; i--; ) props[a[i].name] = a[i].value;\n\t}\n\n\t// Optimization: fast-path for elements containing a single TextNode:\n\tif (!hydrating && vchildren && vchildren.length===1 && typeof vchildren[0]==='string' && fc!=null && fc.splitText!==undefined && fc.nextSibling==null) {\n\t\tif (fc.nodeValue!=vchildren[0]) {\n\t\t\tfc.nodeValue = vchildren[0];\n\t\t}\n\t}\n\t// otherwise, if there are existing or new children, diff them:\n\telse if (vchildren && vchildren.length || fc!=null) {\n\t\tinnerDiffNode(out, vchildren, context, mountAll, hydrating || props.dangerouslySetInnerHTML!=null);\n\t}\n\n\n\t// Apply attributes/props from VNode to the DOM Element:\n\tdiffAttributes(out, vnode.attributes, props);\n\n\n\t// restore previous SVG mode: (in case we're exiting an SVG namespace)\n\tisSvgMode = prevSvgMode;\n\n\treturn out;\n}\n\n\n/**\n * Apply child and attribute changes between a VNode and a DOM Node to the DOM.\n * @param {import('../dom').PreactElement} dom Element whose children should be compared & mutated\n * @param {Array<import('../vnode').VNode>} vchildren Array of VNodes to compare to `dom.childNodes`\n * @param {object} context Implicitly descendant context object (from most\n *  recent `getChildContext()`)\n * @param {boolean} mountAll Whether or not to immediately mount all components\n * @param {boolean} isHydrating if `true`, consumes externally created elements\n *  similar to hydration\n */\nfunction innerDiffNode(dom, vchildren, context, mountAll, isHydrating) {\n\tlet originalChildren = dom.childNodes,\n\t\tchildren = [],\n\t\tkeyed = {},\n\t\tkeyedLen = 0,\n\t\tmin = 0,\n\t\tlen = originalChildren.length,\n\t\tchildrenLen = 0,\n\t\tvlen = vchildren ? vchildren.length : 0,\n\t\tj, c, f, vchild, child;\n\n\t// Build up a map of keyed children and an Array of unkeyed children:\n\tif (len!==0) {\n\t\tfor (let i=0; i<len; i++) {\n\t\t\tlet child = originalChildren[i],\n\t\t\t\tprops = child[ATTR_KEY],\n\t\t\t\tkey = vlen && props ? child._component ? child._component.__key : props.key : null;\n\t\t\tif (key!=null) {\n\t\t\t\tkeyedLen++;\n\t\t\t\tkeyed[key] = child;\n\t\t\t}\n\t\t\telse if (props || (child.splitText!==undefined ? (isHydrating ? child.nodeValue.trim() : true) : isHydrating)) {\n\t\t\t\tchildren[childrenLen++] = child;\n\t\t\t}\n\t\t}\n\t}\n\n\tif (vlen!==0) {\n\t\tfor (let i=0; i<vlen; i++) {\n\t\t\tvchild = vchildren[i];\n\t\t\tchild = null;\n\n\t\t\t// attempt to find a node based on key matching\n\t\t\tlet key = vchild.key;\n\t\t\tif (key!=null) {\n\t\t\t\tif (keyedLen && keyed[key]!==undefined) {\n\t\t\t\t\tchild = keyed[key];\n\t\t\t\t\tkeyed[key] = undefined;\n\t\t\t\t\tkeyedLen--;\n\t\t\t\t}\n\t\t\t}\n\t\t\t// attempt to pluck a node of the same type from the existing children\n\t\t\telse if (min<childrenLen) {\n\t\t\t\tfor (j=min; j<childrenLen; j++) {\n\t\t\t\t\tif (children[j]!==undefined && isSameNodeType(c = children[j], vchild, isHydrating)) {\n\t\t\t\t\t\tchild = c;\n\t\t\t\t\t\tchildren[j] = undefined;\n\t\t\t\t\t\tif (j===childrenLen-1) childrenLen--;\n\t\t\t\t\t\tif (j===min) min++;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// morph the matched/found/created DOM child to match vchild (deep)\n\t\t\tchild = idiff(child, vchild, context, mountAll);\n\n\t\t\tf = originalChildren[i];\n\t\t\tif (child && child!==dom && child!==f) {\n\t\t\t\tif (f==null) {\n\t\t\t\t\tdom.appendChild(child);\n\t\t\t\t}\n\t\t\t\telse if (child===f.nextSibling) {\n\t\t\t\t\tremoveNode(f);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tdom.insertBefore(child, f);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\n\t// remove unused keyed children:\n\tif (keyedLen) {\n\t\tfor (let i in keyed) if (keyed[i]!==undefined) recollectNodeTree(keyed[i], false);\n\t}\n\n\t// remove orphaned unkeyed children:\n\twhile (min<=childrenLen) {\n\t\tif ((child = children[childrenLen--])!==undefined) recollectNodeTree(child, false);\n\t}\n}\n\n\n\n/**\n * Recursively recycle (or just unmount) a node and its descendants.\n * @param {import('../dom').PreactElement} node DOM node to start\n *  unmount/removal from\n * @param {boolean} [unmountOnly=false] If `true`, only triggers unmount\n *  lifecycle, skips removal\n */\nexport function recollectNodeTree(node, unmountOnly) {\n\tlet component = node._component;\n\tif (component) {\n\t\t// if node is owned by a Component, unmount that component (ends up recursing back here)\n\t\tunmountComponent(component);\n\t}\n\telse {\n\t\t// If the node's VNode had a ref function, invoke it with null here.\n\t\t// (this is part of the React spec, and smart for unsetting references)\n\t\tif (node[ATTR_KEY]!=null && node[ATTR_KEY].ref) node[ATTR_KEY].ref(null);\n\n\t\tif (unmountOnly===false || node[ATTR_KEY]==null) {\n\t\t\tremoveNode(node);\n\t\t}\n\n\t\tremoveChildren(node);\n\t}\n}\n\n\n/**\n * Recollect/unmount all children.\n *\t- we use .lastChild here because it causes less reflow than .firstChild\n *\t- it's also cheaper than accessing the .childNodes Live NodeList\n */\nexport function removeChildren(node) {\n\tnode = node.lastChild;\n\twhile (node) {\n\t\tlet next = node.previousSibling;\n\t\trecollectNodeTree(node, true);\n\t\tnode = next;\n\t}\n}\n\n\n/**\n * Apply differences in attributes from a VNode to the given DOM Element.\n * @param {import('../dom').PreactElement} dom Element with attributes to diff `attrs` against\n * @param {object} attrs The desired end-state key-value attribute pairs\n * @param {object} old Current/previous attributes (from previous VNode or\n *  element's prop cache)\n */\nfunction diffAttributes(dom, attrs, old) {\n\tlet name;\n\n\t// remove attributes no longer present on the vnode by setting them to undefined\n\tfor (name in old) {\n\t\tif (!(attrs && attrs[name]!=null) && old[name]!=null) {\n\t\t\tsetAccessor(dom, name, old[name], old[name] = undefined, isSvgMode);\n\t\t}\n\t}\n\n\t// add new & update changed attributes\n\tfor (name in attrs) {\n\t\tif (name!=='children' && name!=='innerHTML' && (!(name in old) || attrs[name]!==(name==='value' || name==='checked' ? dom[name] : old[name]))) {\n\t\t\tsetAccessor(dom, name, old[name], old[name] = attrs[name], isSvgMode);\n\t\t}\n\t}\n}\n","import { Component } from '../component';\n\n/**\n * Retains a pool of Components for re-use.\n * @type {Component[]}\n * @private\n */\nexport const recyclerComponents = [];\n\n\n/**\n * Create a component. Normalizes differences between PFC's and classful\n * Components.\n * @param {function} Ctor The constructor of the component to create\n * @param {object} props The initial props of the component\n * @param {object} context The initial context of the component\n * @returns {import('../component').Component}\n */\nexport function createComponent(Ctor, props, context) {\n\tlet inst, i = recyclerComponents.length;\n\n\tif (Ctor.prototype && Ctor.prototype.render) {\n\t\tinst = new Ctor(props, context);\n\t\tComponent.call(inst, props, context);\n\t}\n\telse {\n\t\tinst = new Component(props, context);\n\t\tinst.constructor = Ctor;\n\t\tinst.render = doRender;\n\t}\n\n\n\twhile (i--) {\n\t\tif (recyclerComponents[i].constructor===Ctor) {\n\t\t\tinst.nextBase = recyclerComponents[i].nextBase;\n\t\t\trecyclerComponents.splice(i, 1);\n\t\t\treturn inst;\n\t\t}\n\t}\n\n\treturn inst;\n}\n\n\n/** The `.render()` method for a PFC backing instance. */\nfunction doRender(props, state, context) {\n\treturn this.constructor(props, context);\n}\n","import { SYNC_RENDER, NO_RENDER, FORCE_RENDER, ASYNC_RENDER, ATTR_KEY } from '../constants';\nimport options from '../options';\nimport { extend } from '../util';\nimport { enqueueRender } from '../render-queue';\nimport { getNodeProps } from './index';\nimport { diff, mounts, diffLevel, flushMounts, recollectNodeTree, removeChildren } from './diff';\nimport { createComponent, recyclerComponents } from './component-recycler';\nimport { removeNode } from '../dom/index';\n\n/**\n * Set a component's `props` and possibly re-render the component\n * @param {import('../component').Component} component The Component to set props on\n * @param {object} props The new props\n * @param {number} renderMode Render options - specifies how to re-render the component\n * @param {object} context The new context\n * @param {boolean} mountAll Whether or not to immediately mount all components\n */\nexport function setComponentProps(component, props, renderMode, context, mountAll) {\n\tif (component._disable) return;\n\tcomponent._disable = true;\n\n\tcomponent.__ref = props.ref;\n\tcomponent.__key = props.key;\n\tdelete props.ref;\n\tdelete props.key;\n\n\tif (typeof component.constructor.getDerivedStateFromProps === 'undefined') {\n\t\tif (!component.base || mountAll) {\n\t\t\tif (component.componentWillMount) component.componentWillMount();\n\t\t}\n\t\telse if (component.componentWillReceiveProps) {\n\t\t\tcomponent.componentWillReceiveProps(props, context);\n\t\t}\n\t}\n\n\tif (context && context!==component.context) {\n\t\tif (!component.prevContext) component.prevContext = component.context;\n\t\tcomponent.context = context;\n\t}\n\n\tif (!component.prevProps) component.prevProps = component.props;\n\tcomponent.props = props;\n\n\tcomponent._disable = false;\n\n\tif (renderMode!==NO_RENDER) {\n\t\tif (renderMode===SYNC_RENDER || options.syncComponentUpdates!==false || !component.base) {\n\t\t\trenderComponent(component, SYNC_RENDER, mountAll);\n\t\t}\n\t\telse {\n\t\t\tenqueueRender(component);\n\t\t}\n\t}\n\n\tif (component.__ref) component.__ref(component);\n}\n\n\n\n/**\n * Render a Component, triggering necessary lifecycle events and taking\n * High-Order Components into account.\n * @param {import('../component').Component} component The component to render\n * @param {number} [renderMode] render mode, see constants.js for available options.\n * @param {boolean} [mountAll] Whether or not to immediately mount all components\n * @param {boolean} [isChild] ?\n * @private\n */\nexport function renderComponent(component, renderMode, mountAll, isChild) {\n\tif (component._disable) return;\n\n\tlet props = component.props,\n\t\tstate = component.state,\n\t\tcontext = component.context,\n\t\tpreviousProps = component.prevProps || props,\n\t\tpreviousState = component.prevState || state,\n\t\tpreviousContext = component.prevContext || context,\n\t\tisUpdate = component.base,\n\t\tnextBase = component.nextBase,\n\t\tinitialBase = isUpdate || nextBase,\n\t\tinitialChildComponent = component._component,\n\t\tskip = false,\n\t\tsnapshot = previousContext,\n\t\trendered, inst, cbase;\n\n\tif (component.constructor.getDerivedStateFromProps) {\n\t\tstate = extend(extend({}, state), component.constructor.getDerivedStateFromProps(props, state));\n\t\tcomponent.state = state;\n\t}\n\n\t// if updating\n\tif (isUpdate) {\n\t\tcomponent.props = previousProps;\n\t\tcomponent.state = previousState;\n\t\tcomponent.context = previousContext;\n\t\tif (renderMode!==FORCE_RENDER\n\t\t\t&& component.shouldComponentUpdate\n\t\t\t&& component.shouldComponentUpdate(props, state, context) === false) {\n\t\t\tskip = true;\n\t\t}\n\t\telse if (component.componentWillUpdate) {\n\t\t\tcomponent.componentWillUpdate(props, state, context);\n\t\t}\n\t\tcomponent.props = props;\n\t\tcomponent.state = state;\n\t\tcomponent.context = context;\n\t}\n\n\tcomponent.prevProps = component.prevState = component.prevContext = component.nextBase = null;\n\tcomponent._dirty = false;\n\n\tif (!skip) {\n\t\trendered = component.render(props, state, context);\n\n\t\t// context to pass to the child, can be updated via (grand-)parent component\n\t\tif (component.getChildContext) {\n\t\t\tcontext = extend(extend({}, context), component.getChildContext());\n\t\t}\n\n\t\tif (isUpdate && component.getSnapshotBeforeUpdate) {\n\t\t\tsnapshot = component.getSnapshotBeforeUpdate(previousProps, previousState);\n\t\t}\n\n\t\tlet childComponent = rendered && rendered.nodeName,\n\t\t\ttoUnmount, base;\n\n\t\tif (typeof childComponent==='function') {\n\t\t\t// set up high order component link\n\n\t\t\tlet childProps = getNodeProps(rendered);\n\t\t\tinst = initialChildComponent;\n\n\t\t\tif (inst && inst.constructor===childComponent && childProps.key==inst.__key) {\n\t\t\t\tsetComponentProps(inst, childProps, SYNC_RENDER, context, false);\n\t\t\t}\n\t\t\telse {\n\t\t\t\ttoUnmount = inst;\n\n\t\t\t\tcomponent._component = inst = createComponent(childComponent, childProps, context);\n\t\t\t\tinst.nextBase = inst.nextBase || nextBase;\n\t\t\t\tinst._parentComponent = component;\n\t\t\t\tsetComponentProps(inst, childProps, NO_RENDER, context, false);\n\t\t\t\trenderComponent(inst, SYNC_RENDER, mountAll, true);\n\t\t\t}\n\n\t\t\tbase = inst.base;\n\t\t}\n\t\telse {\n\t\t\tcbase = initialBase;\n\n\t\t\t// destroy high order component link\n\t\t\ttoUnmount = initialChildComponent;\n\t\t\tif (toUnmount) {\n\t\t\t\tcbase = component._component = null;\n\t\t\t}\n\n\t\t\tif (initialBase || renderMode===SYNC_RENDER) {\n\t\t\t\tif (cbase) cbase._component = null;\n\t\t\t\tbase = diff(cbase, rendered, context, mountAll || !isUpdate, initialBase && initialBase.parentNode, true);\n\t\t\t}\n\t\t}\n\n\t\tif (initialBase && base!==initialBase && inst!==initialChildComponent) {\n\t\t\tlet baseParent = initialBase.parentNode;\n\t\t\tif (baseParent && base!==baseParent) {\n\t\t\t\tbaseParent.replaceChild(base, initialBase);\n\n\t\t\t\tif (!toUnmount) {\n\t\t\t\t\tinitialBase._component = null;\n\t\t\t\t\trecollectNodeTree(initialBase, false);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (toUnmount) {\n\t\t\tunmountComponent(toUnmount);\n\t\t}\n\n\t\tcomponent.base = base;\n\t\tif (base && !isChild) {\n\t\t\tlet componentRef = component,\n\t\t\t\tt = component;\n\t\t\twhile ((t=t._parentComponent)) {\n\t\t\t\t(componentRef = t).base = base;\n\t\t\t}\n\t\t\tbase._component = componentRef;\n\t\t\tbase._componentConstructor = componentRef.constructor;\n\t\t}\n\t}\n\n\tif (!isUpdate || mountAll) {\n\t\tmounts.unshift(component);\n\t}\n\telse if (!skip) {\n\t\t// Ensure that pending componentDidMount() hooks of child components\n\t\t// are called before the componentDidUpdate() hook in the parent.\n\t\t// Note: disabled as it causes duplicate hooks, see https://github.com/developit/preact/issues/750\n\t\t// flushMounts();\n\n\t\tif (component.componentDidUpdate) {\n\t\t\tcomponent.componentDidUpdate(previousProps, previousState, snapshot);\n\t\t}\n\t\tif (options.afterUpdate) options.afterUpdate(component);\n\t}\n\n\twhile (component._renderCallbacks.length) component._renderCallbacks.pop().call(component);\n\n\tif (!diffLevel && !isChild) flushMounts();\n}\n\n\n\n/**\n * Apply the Component referenced by a VNode to the DOM.\n * @param {import('../dom').PreactElement} dom The DOM node to mutate\n * @param {import('../vnode').VNode} vnode A Component-referencing VNode\n * @param {object} context The current context\n * @param {boolean} mountAll Whether or not to immediately mount all components\n * @returns {import('../dom').PreactElement} The created/mutated element\n * @private\n */\nexport function buildComponentFromVNode(dom, vnode, context, mountAll) {\n\tlet c = dom && dom._component,\n\t\toriginalComponent = c,\n\t\toldDom = dom,\n\t\tisDirectOwner = c && dom._componentConstructor===vnode.nodeName,\n\t\tisOwner = isDirectOwner,\n\t\tprops = getNodeProps(vnode);\n\twhile (c && !isOwner && (c=c._parentComponent)) {\n\t\tisOwner = c.constructor===vnode.nodeName;\n\t}\n\n\tif (c && isOwner && (!mountAll || c._component)) {\n\t\tsetComponentProps(c, props, ASYNC_RENDER, context, mountAll);\n\t\tdom = c.base;\n\t}\n\telse {\n\t\tif (originalComponent && !isDirectOwner) {\n\t\t\tunmountComponent(originalComponent);\n\t\t\tdom = oldDom = null;\n\t\t}\n\n\t\tc = createComponent(vnode.nodeName, props, context);\n\t\tif (dom && !c.nextBase) {\n\t\t\tc.nextBase = dom;\n\t\t\t// passing dom/oldDom as nextBase will recycle it if unused, so bypass recycling on L229:\n\t\t\toldDom = null;\n\t\t}\n\t\tsetComponentProps(c, props, SYNC_RENDER, context, mountAll);\n\t\tdom = c.base;\n\n\t\tif (oldDom && dom!==oldDom) {\n\t\t\toldDom._component = null;\n\t\t\trecollectNodeTree(oldDom, false);\n\t\t}\n\t}\n\n\treturn dom;\n}\n\n\n\n/**\n * Remove a component from the DOM and recycle it.\n * @param {import('../component').Component} component The Component instance to unmount\n * @private\n */\nexport function unmountComponent(component) {\n\tif (options.beforeUnmount) options.beforeUnmount(component);\n\n\tlet base = component.base;\n\n\tcomponent._disable = true;\n\n\tif (component.componentWillUnmount) component.componentWillUnmount();\n\n\tcomponent.base = null;\n\n\t// recursively tear down & recollect high-order component children:\n\tlet inner = component._component;\n\tif (inner) {\n\t\tunmountComponent(inner);\n\t}\n\telse if (base) {\n\t\tif (base[ATTR_KEY] && base[ATTR_KEY].ref) base[ATTR_KEY].ref(null);\n\n\t\tcomponent.nextBase = base;\n\n\t\tremoveNode(base);\n\t\trecyclerComponents.push(component);\n\n\t\tremoveChildren(base);\n\t}\n\n\tif (component.__ref) component.__ref(null);\n}\n","import { FORCE_RENDER } from './constants';\nimport { extend } from './util';\nimport { renderComponent } from './vdom/component';\nimport { enqueueRender } from './render-queue';\n/**\n * Base Component class.\n * Provides `setState()` and `forceUpdate()`, which trigger rendering.\n * @typedef {object} Component\n * @param {object} props The initial component props\n * @param {object} context The initial context from parent components' getChildContext\n * @public\n *\n * @example\n * class MyFoo extends Component {\n *   render(props, state) {\n *     return <div />;\n *   }\n * }\n */\nexport function Component(props, context) {\n\tthis._dirty = true;\n\n\t/**\n\t * @public\n\t * @type {object}\n\t */\n\tthis.context = context;\n\n\t/**\n\t * @public\n\t * @type {object}\n\t */\n\tthis.props = props;\n\n\t/**\n\t * @public\n\t * @type {object}\n\t */\n\tthis.state = this.state || {};\n\n\tthis._renderCallbacks = [];\n}\n\n\nextend(Component.prototype, {\n\n\t/**\n\t * Update component state and schedule a re-render.\n\t * @param {object} state A dict of state properties to be shallowly merged\n\t * \tinto the current state, or a function that will produce such a dict. The\n\t * \tfunction is called with the current state and props.\n\t * @param {() => void} callback A function to be called once component state is\n\t * \tupdated\n\t */\n\tsetState(state, callback) {\n\t\tif (!this.prevState) this.prevState = this.state;\n\t\tthis.state = extend(\n\t\t\textend({}, this.state),\n\t\t\ttypeof state === 'function' ? state(this.state, this.props) : state\n\t\t);\n\t\tif (callback) this._renderCallbacks.push(callback);\n\t\tenqueueRender(this);\n\t},\n\n\n\t/**\n\t * Immediately perform a synchronous re-render of the component.\n\t * @param {() => void} callback A function to be called after component is\n\t * \tre-rendered.\n\t * @private\n\t */\n\tforceUpdate(callback) {\n\t\tif (callback) this._renderCallbacks.push(callback);\n\t\trenderComponent(this, FORCE_RENDER);\n\t},\n\n\n\t/**\n\t * Accepts `props` and `state`, and returns a new Virtual DOM tree to build.\n\t * Virtual DOM is generally constructed via [JSX](http://jasonformat.com/wtf-is-jsx).\n\t * @param {object} props Props (eg: JSX attributes) received from parent\n\t * \telement/component\n\t * @param {object} state The component's current state\n\t * @param {object} context Context object, as returned by the nearest\n\t *  ancestor's `getChildContext()`\n\t * @returns {import('./vnode').VNode | void}\n\t */\n\trender() {}\n\n});\n","import { diff } from './vdom/diff';\n\n/**\n * Render JSX into a `parent` Element.\n * @param {import('./vnode').VNode} vnode A (JSX) VNode to render\n * @param {import('./dom').PreactElement} parent DOM element to render into\n * @param {import('./dom').PreactElement} [merge] Attempt to re-use an existing DOM tree rooted at\n *  `merge`\n * @public\n *\n * @example\n * // render a div into <body>:\n * render(<div id=\"hello\">hello!</div>, document.body);\n *\n * @example\n * // render a \"Thing\" component into #foo:\n * const Thing = ({ name }) => <span>{ name }</span>;\n * render(<Thing name=\"one\" />, document.querySelector('#foo'));\n */\nexport function render(vnode, parent, merge) {\n\treturn diff(merge, vnode, {}, false, parent, false);\n}\n","export default {\n  AllAvailable: \"All Available\",\n  RuleOfHalf: \"Rule of Half\",\n  RuleOfThird: \"Rule of Third\"\n};\n","import { h, Component } from \"preact\";\nimport GasStrategy from \"./gas-strategy\";\n\nexport default class Result extends Component {\n  constructor(props) {\n    super(props);\n    this.totalAscentTime = 0;\n    this.litersNeeded = 0;\n    this.amountOfDivers = 2; //Always count total time for 2 divers\n    this.calculate(props);\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    return !isNaN(nextProps.maxDepth);\n  }\n\n  componentWillUpdate(nextProps, nextState) {\n    this.calculate(nextProps);\n  }\n\n  calculate(props) {\n    this.calculateAscentTime(props);\n    this.calculateMinimumGasLiters(props);\n    this.calculateGas();\n  }\n\n  calculateAscentTime(props) {\n    const { maxDepth } = props;\n    const minutesToHandleProblems = 1;\n    if (maxDepth <= 3) {\n      this.totalAscentTime =\n        (minutesToHandleProblems + 1) * this.amountOfDivers;\n      return;\n    }\n\n    if (maxDepth <= 6) {\n      this.totalAscentTime =\n        (minutesToHandleProblems + 2) * this.amountOfDivers;\n      return;\n    }\n\n    if (maxDepth <= 12) {\n      this.totalAscentTime =\n        (minutesToHandleProblems + 3) * this.amountOfDivers;\n      return;\n    }\n\n    if (maxDepth <= 15) {\n      this.totalAscentTime =\n        (minutesToHandleProblems + 4) * this.amountOfDivers;\n      return;\n    }\n\n    if (maxDepth > 15) {\n      const metresUpTo15 = maxDepth - 15;\n      const timeTo15 = Math.ceil(metresUpTo15 / 9); // 9metres / min up to 15m level\n      this.totalAscentTime =\n        (minutesToHandleProblems + timeTo15 + 4) * this.amountOfDivers; //4min extra for 15m-12m, 12m-6m, 6m-3m, 3m-surface\n      return;\n    }\n  }\n\n  calculateMinimumGasLiters(props) {\n    const averageDepthATA = Math.floor(props.maxDepth / 2) / 10 + 1;\n    const scr = 40; //40L/min: to accommodate conservatism, and to account for the increased breathing rate from encountering an issue on the dive.\n    this.litersNeeded = this.totalAscentTime * scr * averageDepthATA;\n  }\n\n  calculateGas() {\n    const { cylinderBarCapacity } = this.props;\n    const d12 = this.getMinBar(24);\n    const s12 = this.getMinBar(12);\n    const d11 = this.getMinBar(22);\n    const s11 = this.getMinBar(11);\n    const d10 = this.getMinBar(20);\n    const s10 = this.getMinBar(10);\n\n    this.minimumBarNeeded = {\n      d12: {\n        minBar: d12,\n        usableGas: cylinderBarCapacity - d12\n      },\n      s12: {\n        minBar: s12,\n        usableGas: cylinderBarCapacity - s12\n      },\n      d11: {\n        minBar: d11,\n        usableGas: cylinderBarCapacity - d11\n      },\n      s11: {\n        minBar: s11,\n        usableGas: cylinderBarCapacity - s11\n      },\n      d10: {\n        minBar: d10,\n        usableGas: cylinderBarCapacity - d10\n      },\n      s10: {\n        minBar: s10,\n        usableGas: cylinderBarCapacity - s10\n      }\n    };\n  }\n\n  getMinBar(cylinderLitres) {\n    const minimumBars = Math.floor(this.litersNeeded / cylinderLitres);\n    return minimumBars > 40 ? minimumBars : 40; //Minimum Gas can NEVER be less than 40 BAR due to the possible SPG inaccuracy at the lower ranges\n  }\n\n  render() {\n    if (typeof this.props.maxDepth !== \"number\" || this.props.maxDepth < 1)\n      return null;\n\n    return (\n      <div style={style.container}>\n        <p style={style.text}>\n          Ascent time from\n          <strong>\n            {this.props.maxDepth}m = {this.totalAscentTime} minutes\n          </strong>\n        </p>\n        <p style={style.text}>\n          <strong>{this.litersNeeded} L</strong> minimum gas needed.\n        </p>\n        <h2 style={style.h2}>Double 12L cylinders:</h2>\n        {this.renderMinGasText(this.minimumBarNeeded.d12.minBar)}\n        {this.renderUsableGasText(this.minimumBarNeeded.d12.usableGas)}\n\n        <h2 style={style.h2}>Single 12L cylinder:</h2>\n        {this.renderMinGasText(this.minimumBarNeeded.s12.minBar)}\n        {this.renderUsableGasText(this.minimumBarNeeded.s12.usableGas)}\n\n        <h2 style={style.h2}>Double 11L cylinders:</h2>\n        {this.renderMinGasText(this.minimumBarNeeded.d11.minBar)}\n        {this.renderUsableGasText(this.minimumBarNeeded.d11.usableGas)}\n\n        <h2 style={style.h2}>Single 11L cylinder:</h2>\n        {this.renderMinGasText(this.minimumBarNeeded.s11.minBar)}\n        {this.renderUsableGasText(this.minimumBarNeeded.s11.usableGas)}\n\n        <h2 style={style.h2}>Double 10L cylinders:</h2>\n        {this.renderMinGasText(this.minimumBarNeeded.d10.minBar)}\n        {this.renderUsableGasText(this.minimumBarNeeded.d10.usableGas)}\n\n        <h2 style={style.h2}>Single 10L cylinder:</h2>\n        {this.renderMinGasText(this.minimumBarNeeded.s10.minBar)}\n        {this.renderUsableGasText(this.minimumBarNeeded.s10.usableGas)}\n      </div>\n    );\n  }\n\n  renderMinGasText(minBarValue) {\n    return (\n      <p style={style.text}>\n        Minimum gas (for {this.amountOfDivers} divers):\n        <strong>{minBarValue} BAR</strong>\n      </p>\n    );\n  }\n\n  renderUsableGasText(usableGasValue) {\n    if (this.props.gasStrategy === GasStrategy.AllAvailable) {\n      return (\n        <p style={style.text}>\n          Usable gas ({this.props.gasStrategy}) :\n          <strong>{usableGasValue} BAR</strong>\n        </p>\n      );\n    }\n    if (this.props.gasStrategy === GasStrategy.RuleOfHalf) {\n      const modifiedUsableGas = Math.floor(usableGasValue / 2);\n      const turnPressure = this.props.cylinderBarCapacity - modifiedUsableGas;\n      return (\n        <p style={style.text}>\n          Usable gas ({this.props.gasStrategy}) :\n          <strong>{usableGasValue} BAR</strong>\n          <br />\n          Turn pressure: {turnPressure}\n        </p>\n      );\n    }\n    if (this.props.gasStrategy === GasStrategy.RuleOfThird) {\n      const modifiedUsableGas = Math.floor(usableGasValue / 3);\n      const turnPressure = this.props.cylinderBarCapacity - modifiedUsableGas;\n      return (\n        <p style={style.text}>\n          Usable gas ({this.props.gasStrategy}) :\n          <strong>{usableGasValue} BAR</strong>\n          <br />\n          Turn pressure: {turnPressure}\n          <br />\n          Emergency gas: {modifiedUsableGas}\n        </p>\n      );\n    }\n    return null;\n  }\n}\n\nconst style = {\n  container: {\n    backgroundColor: \"#08689b\",\n    padding: \"10px\",\n    borderRadius: \"10px\"\n  },\n  h2: {\n    fontSize: \"22px\",\n    fontFamily: \"Arial\",\n    marginBottom: \"0\"\n  },\n  text: {\n    fontSize: \"18px\",\n    fontFamily: \"Arial\",\n    margin: \"0 0 2px 0\"\n  }\n};\n","import { h, Component } from \"preact\";\nimport Result from \"./result\";\nimport GasStrategy from \"./gas-strategy\";\n\nexport default class Ascent extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      maxDepth: 0,\n      cylinderBarCapacity: 200,\n      gasStrategy: GasStrategy.AllAvailable\n    };\n    this.onDepthChange = this.onDepthChange.bind(this);\n    this.onCylinderBarCapacityChange = this.onCylinderBarCapacityChange.bind(\n      this\n    );\n    this.onGasStrategyChange = this.onGasStrategyChange.bind(this);\n  }\n\n  onDepthChange(event) {\n    let parsedInput = 0;\n    try {\n      parsedInput = parseInt(event.target.value);\n    } catch (e) {\n      //Ignore\n    }\n    this.setState({ maxDepth: parsedInput });\n  }\n\n  onCylinderBarCapacityChange(event) {\n    let parsedInput = 0;\n    try {\n      parsedInput = parseInt(event.target.value);\n    } catch (e) {\n      //Ignore\n    }\n    this.setState({ cylinderBarCapacity: parsedInput });\n  }\n\n  onGasStrategyChange(event) {\n    this.setState({ gasStrategy: event.target.value });\n  }\n\n  render() {\n    return (\n      <div style={style.container}>\n        <h1>Ascent calculator - EAN32</h1>\n        <input\n          style={style.input}\n          type=\"number\"\n          min=\"0\"\n          max=\"40\"\n          value={this.state.maxDepth}\n          placeholder=\"Max depth metres?\"\n          onKeyUp={this.onDepthChange}\n        />\n        <input\n          style={style.input}\n          type=\"number\"\n          min=\"0\"\n          max=\"300\"\n          value={this.state.cylinderBarCapacity}\n          placeholder=\"Cylinder bar capacity?\"\n          onKeyUp={this.onCylinderBarCapacityChange}\n        />\n        <select\n          style={style.select}\n          value={this.state.gasStrategy}\n          onChange={this.onGasStrategyChange}\n        >\n          <option value={GasStrategy.AllAvailable}>\n            {GasStrategy.AllAvailable}\n          </option>\n          <option value={GasStrategy.RuleOfHalf}>\n            {GasStrategy.RuleOfHalf}\n          </option>\n          <option value={GasStrategy.RuleOfThird}>\n            {GasStrategy.RuleOfThird}\n          </option>\n        </select>\n        <Result\n          maxDepth={this.state.maxDepth}\n          cylinderBarCapacity={this.state.cylinderBarCapacity}\n          gasStrategy={this.state.gasStrategy}\n        />\n      </div>\n    );\n  }\n}\n\nconst style = {\n  container: {\n    backgroundColor: \"#08689b\",\n    color: \"white\",\n    padding: \"10px\",\n    borderRadius: \"10px\"\n  },\n  input: {\n    fontSize: \"18px\",\n    fontFamily: \"Arial\",\n    padding: \"4px\",\n    border: \"1px solid gray\",\n    minWidth: \"80px\",\n    marginRight: \"10px\",\n    borderRadius: \"6px\"\n  },\n  select: {\n    fontSize: \"18px\",\n    fontFamily: \"Arial\",\n    border: \"1px solid gray\",\n    marginRight: \"10px\"\n  }\n};\n","import { h, render, Component } from \"preact\";\nimport Ascent from \"./components/ascent/ascent\";\n\nclass GueApp extends Component {\n  render() {\n    return <Ascent />;\n  }\n}\n\nrender(<GueApp />, document.getElementById(\"gue-app\"));\n"]}