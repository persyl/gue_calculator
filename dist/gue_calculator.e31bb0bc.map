{"version":3,"sources":["../src/vnode.js","../src/options.js","../src/h.js","../src/util.js","../src/clone-element.js","../src/constants.js","../src/render-queue.js","../src/vdom/index.js","../src/dom/index.js","../src/vdom/diff.js","../src/vdom/component-recycler.js","../src/vdom/component.js","../src/component.js","../src/render.js","../src/preact.js","components/ascent/gas-strategy.js","components/ascent/result.js","components/ascent/ascent.js","index.js"],"names":["VNode","options","stack","EMPTY_CHILDREN","h","nodeName","attributes","children","lastSimple","child","simple","i","arguments","length","push","pop","undefined","String","p","key","vnode","extend","obj","props","defer","Promise","resolve","then","bind","setTimeout","cloneElement","slice","call","NO_RENDER","SYNC_RENDER","FORCE_RENDER","ASYNC_RENDER","IS_NON_DIMENSIONAL","items","enqueueRender","component","_dirty","rerender","list","isSameNodeType","node","hydrating","_componentConstructor","isNamedNode","normalizedNodeName","defaultProps","document","createElementNS","removeNode","parentNode","removeChild","setAccessor","name","old","value","style","innerHTML","__html","useCapture","toLowerCase","_listeners","ns","eventProxy","mounts","diffLevel","flushMounts","c","parent","ATTR_KEY","ret","componentRoot","out","prevSvgMode","buildComponentFromVNode","vnodeName","dom","firstChild","appendChild","vchildren","nodeValue","context","mountAll","dangerouslySetInnerHTML","originalChildren","keyed","min","len","childrenLen","vlen","j","f","vchild","keyedLen","unmountOnly","next","previousSibling","diffAttributes","attrs","recyclerComponents","createComponent","Ctor","prototype","constructor","nextBase","doRender","setComponentProps","_disable","componentWillReceiveProps","prevContext","renderMode","syncComponentUpdates","__ref","renderComponent","state","previousProps","previousState","isUpdate","base","initialBase","snapshot","rendered","inst","cbase","shouldComponentUpdate","prevProps","render","getSnapshotBeforeUpdate","childComponent","toUnmount","childProps","getNodeProps","initialChildComponent","_parentComponent","_component","baseParent","replaceChild","componentRef","t","unshift","afterUpdate","_renderCallbacks","isChild","originalComponent","oldDom","isDirectOwner","isOwner","beforeUnmount","componentWillUnmount","callback","diff","AllAvailable","RuleOfHalf","RuleOfThird","Result","totalAscentTime","litersNeeded","amountOfDivers","calculate","nextProps","nextState","isNaN","maxDepth","calculateAscentTime","calculateMinimumGasLiters","calculateGas","minutesToHandleProblems","metresUpTo15","timeTo15","Math","ceil","averageDepthATA","floor","scr","cylinderBarCapacity","d12","getMinBar","s12","d11","s11","d10","s10","minimumBarNeeded","minBar","usableGas","cylinderLitres","minimumBars","container","text","h2","renderMinGasText","renderUsableGasText","minBarValue","usableGasValue","gasStrategy","GasStrategy","modifiedUsableGas","turnPressure","Component","backgroundColor","padding","borderRadius","fontSize","fontFamily","marginBottom","margin","Ascent","onDepthChange","onCylinderBarCapacityChange","onGasStrategyChange","event","parsedInput","parseInt","target","e","setState","input","select","color","border","minWidth","marginRight","GueApp","getElementById"],"mappings":"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","file":"gue_calculator.e31bb0bc.map","sourceRoot":"..","sourcesContent":["/**\n * Virtual DOM Node\n * @typedef VNode\n * @property {string | function} nodeName The string of the DOM node to create or Component constructor to render\n * @property {Array<VNode | string>} children The children of node\n * @property {string | number | undefined} key The key used to identify this VNode in a list\n * @property {object} attributes The properties of this VNode\n */\nexport const VNode = function VNode() {};\n","/**\n * @typedef {import('./component').Component} Component\n * @typedef {import('./vnode').VNode} VNode\n */\n\n/**\n * Global options\n * @public\n * @typedef Options\n * @property {boolean} [syncComponentUpdates] If `true`, `prop` changes trigger synchronous component updates. Defaults to true.\n * @property {(vnode: VNode) => void} [vnode] Processes all created VNodes.\n * @property {(component: Component) => void} [afterMount] Hook invoked after a component is mounted.\n * @property {(component: Component) => void} [afterUpdate] Hook invoked after the DOM is updated with a component's latest render.\n * @property {(component: Component) => void} [beforeUnmount] Hook invoked immediately before a component is unmounted.\n * @property {(rerender: function) => void} [debounceRendering] Hook invoked whenever a rerender is requested. Can be used to debounce rerenders.\n * @property {(event: Event) => Event | void} [event] Hook invoked before any Preact event listeners. The return value (if any) replaces the native browser event given to event listeners\n */\n\n/** @type {Options}  */\nconst options = {};\n\nexport default options;\n","import { VNode } from './vnode';\nimport options from './options';\n\n\nconst stack = [];\n\nconst EMPTY_CHILDREN = [];\n\n/**\n * JSX/hyperscript reviver.\n * @see http://jasonformat.com/wtf-is-jsx\n * Benchmarks: https://esbench.com/bench/57ee8f8e330ab09900a1a1a0\n *\n * Note: this is exported as both `h()` and `createElement()` for compatibility\n * reasons.\n *\n * Creates a VNode (virtual DOM element). A tree of VNodes can be used as a\n * lightweight representation of the structure of a DOM tree. This structure can\n * be realized by recursively comparing it against the current _actual_ DOM\n * structure, and applying only the differences.\n *\n * `h()`/`createElement()` accepts an element name, a list of attributes/props,\n * and optionally children to append to the element.\n *\n * @example The following DOM tree\n *\n * `<div id=\"foo\" name=\"bar\">Hello!</div>`\n *\n * can be constructed using this function as:\n *\n * `h('div', { id: 'foo', name : 'bar' }, 'Hello!');`\n *\n * @param {string | function} nodeName An element name. Ex: `div`, `a`, `span`, etc.\n * @param {object | null} attributes Any attributes/props to set on the created element.\n * @param {VNode[]} [rest] Additional arguments are taken to be children to\n *  append. Can be infinitely nested Arrays.\n *\n * @public\n */\nexport function h(nodeName, attributes) {\n\tlet children=EMPTY_CHILDREN, lastSimple, child, simple, i;\n\tfor (i=arguments.length; i-- > 2; ) {\n\t\tstack.push(arguments[i]);\n\t}\n\tif (attributes && attributes.children!=null) {\n\t\tif (!stack.length) stack.push(attributes.children);\n\t\tdelete attributes.children;\n\t}\n\twhile (stack.length) {\n\t\tif ((child = stack.pop()) && child.pop!==undefined) {\n\t\t\tfor (i=child.length; i--; ) stack.push(child[i]);\n\t\t}\n\t\telse {\n\t\t\tif (typeof child==='boolean') child = null;\n\n\t\t\tif ((simple = typeof nodeName!=='function')) {\n\t\t\t\tif (child==null) child = '';\n\t\t\t\telse if (typeof child==='number') child = String(child);\n\t\t\t\telse if (typeof child!=='string') simple = false;\n\t\t\t}\n\n\t\t\tif (simple && lastSimple) {\n\t\t\t\tchildren[children.length-1] += child;\n\t\t\t}\n\t\t\telse if (children===EMPTY_CHILDREN) {\n\t\t\t\tchildren = [child];\n\t\t\t}\n\t\t\telse {\n\t\t\t\tchildren.push(child);\n\t\t\t}\n\n\t\t\tlastSimple = simple;\n\t\t}\n\t}\n\n\tlet p = new VNode();\n\tp.nodeName = nodeName;\n\tp.children = children;\n\tp.attributes = attributes==null ? undefined : attributes;\n\tp.key = attributes==null ? undefined : attributes.key;\n\n\t// if a \"vnode hook\" is defined, pass every created VNode to it\n\tif (options.vnode!==undefined) options.vnode(p);\n\n\treturn p;\n}\n","/**\n * Copy all properties from `props` onto `obj`.\n * @param {object} obj Object onto which properties should be copied.\n * @param {object} props Object from which to copy properties.\n * @returns {object}\n * @private\n */\nexport function extend(obj, props) {\n\tfor (let i in props) obj[i] = props[i];\n\treturn obj;\n}\n\n/**\n * Call a function asynchronously, as soon as possible. Makes\n * use of HTML Promise to schedule the callback if available,\n * otherwise falling back to `setTimeout` (mainly for IE<11).\n * @type {(callback: function) => void}\n */\nexport const defer = typeof Promise=='function' ? Promise.resolve().then.bind(Promise.resolve()) : setTimeout;\n","import { extend } from './util';\nimport { h } from './h';\n\n/**\n * Clones the given VNode, optionally adding attributes/props and replacing its\n * children.\n * @param {import('./vnode').VNode} vnode The virtual DOM element to clone\n * @param {object} props Attributes/props to add when cloning\n * @param {Array<import('./vnode').VNode>} [rest] Any additional arguments will be used as replacement\n *  children.\n */\nexport function cloneElement(vnode, props) {\n\treturn h(\n\t\tvnode.nodeName,\n\t\textend(extend({}, vnode.attributes), props),\n\t\targuments.length>2 ? [].slice.call(arguments, 2) : vnode.children\n\t);\n}\n","// render modes\n\n/** Do not re-render a component */\nexport const NO_RENDER = 0;\n/** Synchronously re-render a component and its children */\nexport const SYNC_RENDER = 1;\n/** Synchronously re-render a component, even if its lifecycle methods attempt to prevent it. */\nexport const FORCE_RENDER = 2;\n/** Queue asynchronous re-render of a component and it's children */\nexport const ASYNC_RENDER = 3;\n\n\nexport const ATTR_KEY = '__preactattr_';\n\n/** DOM properties that should NOT have \"px\" added when numeric */\nexport const IS_NON_DIMENSIONAL = /acit|ex(?:s|g|n|p|$)|rph|ows|mnc|ntw|ine[ch]|zoo|^ord/i;\n\n","import options from './options';\nimport { defer } from './util';\nimport { renderComponent } from './vdom/component';\n\n/**\n * Managed queue of dirty components to be re-rendered\n * @type {Array<import('./component').Component>}\n */\nlet items = [];\n\n/**\n * Enqueue a rerender of a component\n * @param {import('./component').Component} component The component to rerender\n */\nexport function enqueueRender(component) {\n\tif (!component._dirty && (component._dirty = true) && items.push(component)==1) {\n\t\t(options.debounceRendering || defer)(rerender);\n\t}\n}\n\n/** Rerender all enqueued dirty components */\nexport function rerender() {\n\tlet p, list = items;\n\titems = [];\n\twhile ( (p = list.pop()) ) {\n\t\tif (p._dirty) renderComponent(p);\n\t}\n}\n","import { extend } from '../util';\n\n\n/**\n * Check if two nodes are equivalent.\n * @param {import('../dom').PreactElement} node DOM Node to compare\n * @param {import('../vnode').VNode} vnode Virtual DOM node to compare\n * @param {boolean} [hydrating=false] If true, ignores component constructors\n *  when comparing.\n * @private\n */\nexport function isSameNodeType(node, vnode, hydrating) {\n\tif (typeof vnode==='string' || typeof vnode==='number') {\n\t\treturn node.splitText!==undefined;\n\t}\n\tif (typeof vnode.nodeName==='string') {\n\t\treturn !node._componentConstructor && isNamedNode(node, vnode.nodeName);\n\t}\n\treturn hydrating || node._componentConstructor===vnode.nodeName;\n}\n\n\n/**\n * Check if an Element has a given nodeName, case-insensitively.\n * @param {import('../dom').PreactElement} node A DOM Element to inspect the name of.\n * @param {string} nodeName Unnormalized name to compare against.\n */\nexport function isNamedNode(node, nodeName) {\n\treturn node.normalizedNodeName===nodeName || node.nodeName.toLowerCase()===nodeName.toLowerCase();\n}\n\n\n/**\n * Reconstruct Component-style `props` from a VNode.\n * Ensures default/fallback values from `defaultProps`:\n * Own-properties of `defaultProps` not present in `vnode.attributes` are added.\n * @param {import('../vnode').VNode} vnode The VNode to get props for\n * @returns {object} The props to use for this VNode\n */\nexport function getNodeProps(vnode) {\n\tlet props = extend({}, vnode.attributes);\n\tprops.children = vnode.children;\n\n\tlet defaultProps = vnode.nodeName.defaultProps;\n\tif (defaultProps!==undefined) {\n\t\tfor (let i in defaultProps) {\n\t\t\tif (props[i]===undefined) {\n\t\t\t\tprops[i] = defaultProps[i];\n\t\t\t}\n\t\t}\n\t}\n\n\treturn props;\n}\n","import { IS_NON_DIMENSIONAL } from '../constants';\nimport options from '../options';\n\n/**\n * A DOM event listener\n * @typedef {(e: Event) => void} EventListner\n */\n\n/**\n * A mapping of event types to event listeners\n * @typedef {Object.<string, EventListener>} EventListenerMap\n */\n\n/**\n * Properties Preact adds to elements it creates\n * @typedef PreactElementExtensions\n * @property {string} [normalizedNodeName] A normalized node name to use in diffing\n * @property {EventListenerMap} [_listeners] A map of event listeners added by components to this DOM node\n * @property {import('../component').Component} [_component] The component that rendered this DOM node\n * @property {function} [_componentConstructor] The constructor of the component that rendered this DOM node\n */\n\n/**\n * A DOM element that has been extended with Preact properties\n * @typedef {Element & ElementCSSInlineStyle & PreactElementExtensions} PreactElement\n */\n\n/**\n * Create an element with the given nodeName.\n * @param {string} nodeName The DOM node to create\n * @param {boolean} [isSvg=false] If `true`, creates an element within the SVG\n *  namespace.\n * @returns {PreactElement} The created DOM node\n */\nexport function createNode(nodeName, isSvg) {\n\t/** @type {PreactElement} */\n\tlet node = isSvg ? document.createElementNS('http://www.w3.org/2000/svg', nodeName) : document.createElement(nodeName);\n\tnode.normalizedNodeName = nodeName;\n\treturn node;\n}\n\n\n/**\n * Remove a child node from its parent if attached.\n * @param {Node} node The node to remove\n */\nexport function removeNode(node) {\n\tlet parentNode = node.parentNode;\n\tif (parentNode) parentNode.removeChild(node);\n}\n\n\n/**\n * Set a named attribute on the given Node, with special behavior for some names\n * and event handlers. If `value` is `null`, the attribute/handler will be\n * removed.\n * @param {PreactElement} node An element to mutate\n * @param {string} name The name/key to set, such as an event or attribute name\n * @param {*} old The last value that was set for this name/node pair\n * @param {*} value An attribute value, such as a function to be used as an\n *  event handler\n * @param {boolean} isSvg Are we currently diffing inside an svg?\n * @private\n */\nexport function setAccessor(node, name, old, value, isSvg) {\n\tif (name==='className') name = 'class';\n\n\n\tif (name==='key') {\n\t\t// ignore\n\t}\n\telse if (name==='ref') {\n\t\tif (old) old(null);\n\t\tif (value) value(node);\n\t}\n\telse if (name==='class' && !isSvg) {\n\t\tnode.className = value || '';\n\t}\n\telse if (name==='style') {\n\t\tif (!value || typeof value==='string' || typeof old==='string') {\n\t\t\tnode.style.cssText = value || '';\n\t\t}\n\t\tif (value && typeof value==='object') {\n\t\t\tif (typeof old!=='string') {\n\t\t\t\tfor (let i in old) if (!(i in value)) node.style[i] = '';\n\t\t\t}\n\t\t\tfor (let i in value) {\n\t\t\t\tnode.style[i] = typeof value[i]==='number' && IS_NON_DIMENSIONAL.test(i)===false ? (value[i]+'px') : value[i];\n\t\t\t}\n\t\t}\n\t}\n\telse if (name==='dangerouslySetInnerHTML') {\n\t\tif (value) node.innerHTML = value.__html || '';\n\t}\n\telse if (name[0]=='o' && name[1]=='n') {\n\t\tlet useCapture = name !== (name=name.replace(/Capture$/, ''));\n\t\tname = name.toLowerCase().substring(2);\n\t\tif (value) {\n\t\t\tif (!old) node.addEventListener(name, eventProxy, useCapture);\n\t\t}\n\t\telse {\n\t\t\tnode.removeEventListener(name, eventProxy, useCapture);\n\t\t}\n\t\t(node._listeners || (node._listeners = {}))[name] = value;\n\t}\n\telse if (name!=='list' && name!=='type' && !isSvg && name in node) {\n\t\t// Attempt to set a DOM property to the given value.\n\t\t// IE & FF throw for certain property-value combinations.\n\t\ttry {\n\t\t\tnode[name] = value==null ? '' : value;\n\t\t} catch (e) { }\n\t\tif ((value==null || value===false) && name!='spellcheck') node.removeAttribute(name);\n\t}\n\telse {\n\t\tlet ns = isSvg && (name !== (name = name.replace(/^xlink:?/, '')));\n\t\t// spellcheck is treated differently than all other boolean values and\n\t\t// should not be removed when the value is `false`. See:\n\t\t// https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#attr-spellcheck\n\t\tif (value==null || value===false) {\n\t\t\tif (ns) node.removeAttributeNS('http://www.w3.org/1999/xlink', name.toLowerCase());\n\t\t\telse node.removeAttribute(name);\n\t\t}\n\t\telse if (typeof value!=='function') {\n\t\t\tif (ns) node.setAttributeNS('http://www.w3.org/1999/xlink', name.toLowerCase(), value);\n\t\t\telse node.setAttribute(name, value);\n\t\t}\n\t}\n}\n\n\n/**\n * Proxy an event to hooked event handlers\n * @param {Event} e The event object from the browser\n * @private\n */\nfunction eventProxy(e) {\n\treturn this._listeners[e.type](options.event && options.event(e) || e);\n}\n","import { ATTR_KEY } from '../constants';\nimport { isSameNodeType, isNamedNode } from './index';\nimport { buildComponentFromVNode } from './component';\nimport { createNode, setAccessor } from '../dom/index';\nimport { unmountComponent } from './component';\nimport options from '../options';\nimport { removeNode } from '../dom/index';\n\n/**\n * Queue of components that have been mounted and are awaiting componentDidMount\n * @type {Array<import('../component').Component>}\n */\nexport const mounts = [];\n\n/** Diff recursion count, used to track the end of the diff cycle. */\nexport let diffLevel = 0;\n\n/** Global flag indicating if the diff is currently within an SVG */\nlet isSvgMode = false;\n\n/** Global flag indicating if the diff is performing hydration */\nlet hydrating = false;\n\n/** Invoke queued componentDidMount lifecycle methods */\nexport function flushMounts() {\n\tlet c;\n\twhile ((c=mounts.pop())) {\n\t\tif (options.afterMount) options.afterMount(c);\n\t\tif (c.componentDidMount) c.componentDidMount();\n\t}\n}\n\n\n/**\n * Apply differences in a given vnode (and it's deep children) to a real DOM Node.\n * @param {import('../dom').PreactElement} dom A DOM node to mutate into the shape of a `vnode`\n * @param {import('../vnode').VNode} vnode A VNode (with descendants forming a tree) representing\n *  the desired DOM structure\n * @param {object} context The current context\n * @param {boolean} mountAll Whether or not to immediately mount all components\n * @param {Element} parent ?\n * @param {boolean} componentRoot ?\n * @returns {import('../dom').PreactElement} The created/mutated element\n * @private\n */\nexport function diff(dom, vnode, context, mountAll, parent, componentRoot) {\n\t// diffLevel having been 0 here indicates initial entry into the diff (not a subdiff)\n\tif (!diffLevel++) {\n\t\t// when first starting the diff, check if we're diffing an SVG or within an SVG\n\t\tisSvgMode = parent!=null && parent.ownerSVGElement!==undefined;\n\n\t\t// hydration is indicated by the existing element to be diffed not having a prop cache\n\t\thydrating = dom!=null && !(ATTR_KEY in dom);\n\t}\n\n\tlet ret = idiff(dom, vnode, context, mountAll, componentRoot);\n\n\t// append the element if its a new parent\n\tif (parent && ret.parentNode!==parent) parent.appendChild(ret);\n\n\t// diffLevel being reduced to 0 means we're exiting the diff\n\tif (!--diffLevel) {\n\t\thydrating = false;\n\t\t// invoke queued componentDidMount lifecycle methods\n\t\tif (!componentRoot) flushMounts();\n\t}\n\n\treturn ret;\n}\n\n\n/**\n * Internals of `diff()`, separated to allow bypassing diffLevel / mount flushing.\n * @param {import('../dom').PreactElement} dom A DOM node to mutate into the shape of a `vnode`\n * @param {import('../vnode').VNode} vnode A VNode (with descendants forming a tree) representing the desired DOM structure\n * @param {object} context The current context\n * @param {boolean} mountAll Whether or not to immediately mount all components\n * @param {boolean} [componentRoot] ?\n * @private\n */\nfunction idiff(dom, vnode, context, mountAll, componentRoot) {\n\tlet out = dom,\n\t\tprevSvgMode = isSvgMode;\n\n\t// empty values (null, undefined, booleans) render as empty Text nodes\n\tif (vnode==null || typeof vnode==='boolean') vnode = '';\n\n\n\t// Fast case: Strings & Numbers create/update Text nodes.\n\tif (typeof vnode==='string' || typeof vnode==='number') {\n\n\t\t// update if it's already a Text node:\n\t\tif (dom && dom.splitText!==undefined && dom.parentNode && (!dom._component || componentRoot)) {\n\t\t\t/* istanbul ignore if */ /* Browser quirk that can't be covered: https://github.com/developit/preact/commit/fd4f21f5c45dfd75151bd27b4c217d8003aa5eb9 */\n\t\t\tif (dom.nodeValue!=vnode) {\n\t\t\t\tdom.nodeValue = vnode;\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\t// it wasn't a Text node: replace it with one and recycle the old Element\n\t\t\tout = document.createTextNode(vnode);\n\t\t\tif (dom) {\n\t\t\t\tif (dom.parentNode) dom.parentNode.replaceChild(out, dom);\n\t\t\t\trecollectNodeTree(dom, true);\n\t\t\t}\n\t\t}\n\n\t\tout[ATTR_KEY] = true;\n\n\t\treturn out;\n\t}\n\n\n\t// If the VNode represents a Component, perform a component diff:\n\tlet vnodeName = vnode.nodeName;\n\tif (typeof vnodeName==='function') {\n\t\treturn buildComponentFromVNode(dom, vnode, context, mountAll);\n\t}\n\n\n\t// Tracks entering and exiting SVG namespace when descending through the tree.\n\tisSvgMode = vnodeName==='svg' ? true : vnodeName==='foreignObject' ? false : isSvgMode;\n\n\n\t// If there's no existing element or it's the wrong type, create a new one:\n\tvnodeName = String(vnodeName);\n\tif (!dom || !isNamedNode(dom, vnodeName)) {\n\t\tout = createNode(vnodeName, isSvgMode);\n\n\t\tif (dom) {\n\t\t\t// move children into the replacement node\n\t\t\twhile (dom.firstChild) out.appendChild(dom.firstChild);\n\n\t\t\t// if the previous Element was mounted into the DOM, replace it inline\n\t\t\tif (dom.parentNode) dom.parentNode.replaceChild(out, dom);\n\n\t\t\t// recycle the old element (skips non-Element node types)\n\t\t\trecollectNodeTree(dom, true);\n\t\t}\n\t}\n\n\n\tlet fc = out.firstChild,\n\t\tprops = out[ATTR_KEY],\n\t\tvchildren = vnode.children;\n\n\tif (props==null) {\n\t\tprops = out[ATTR_KEY] = {};\n\t\tfor (let a=out.attributes, i=a.length; i--; ) props[a[i].name] = a[i].value;\n\t}\n\n\t// Optimization: fast-path for elements containing a single TextNode:\n\tif (!hydrating && vchildren && vchildren.length===1 && typeof vchildren[0]==='string' && fc!=null && fc.splitText!==undefined && fc.nextSibling==null) {\n\t\tif (fc.nodeValue!=vchildren[0]) {\n\t\t\tfc.nodeValue = vchildren[0];\n\t\t}\n\t}\n\t// otherwise, if there are existing or new children, diff them:\n\telse if (vchildren && vchildren.length || fc!=null) {\n\t\tinnerDiffNode(out, vchildren, context, mountAll, hydrating || props.dangerouslySetInnerHTML!=null);\n\t}\n\n\n\t// Apply attributes/props from VNode to the DOM Element:\n\tdiffAttributes(out, vnode.attributes, props);\n\n\n\t// restore previous SVG mode: (in case we're exiting an SVG namespace)\n\tisSvgMode = prevSvgMode;\n\n\treturn out;\n}\n\n\n/**\n * Apply child and attribute changes between a VNode and a DOM Node to the DOM.\n * @param {import('../dom').PreactElement} dom Element whose children should be compared & mutated\n * @param {Array<import('../vnode').VNode>} vchildren Array of VNodes to compare to `dom.childNodes`\n * @param {object} context Implicitly descendant context object (from most\n *  recent `getChildContext()`)\n * @param {boolean} mountAll Whether or not to immediately mount all components\n * @param {boolean} isHydrating if `true`, consumes externally created elements\n *  similar to hydration\n */\nfunction innerDiffNode(dom, vchildren, context, mountAll, isHydrating) {\n\tlet originalChildren = dom.childNodes,\n\t\tchildren = [],\n\t\tkeyed = {},\n\t\tkeyedLen = 0,\n\t\tmin = 0,\n\t\tlen = originalChildren.length,\n\t\tchildrenLen = 0,\n\t\tvlen = vchildren ? vchildren.length : 0,\n\t\tj, c, f, vchild, child;\n\n\t// Build up a map of keyed children and an Array of unkeyed children:\n\tif (len!==0) {\n\t\tfor (let i=0; i<len; i++) {\n\t\t\tlet child = originalChildren[i],\n\t\t\t\tprops = child[ATTR_KEY],\n\t\t\t\tkey = vlen && props ? child._component ? child._component.__key : props.key : null;\n\t\t\tif (key!=null) {\n\t\t\t\tkeyedLen++;\n\t\t\t\tkeyed[key] = child;\n\t\t\t}\n\t\t\telse if (props || (child.splitText!==undefined ? (isHydrating ? child.nodeValue.trim() : true) : isHydrating)) {\n\t\t\t\tchildren[childrenLen++] = child;\n\t\t\t}\n\t\t}\n\t}\n\n\tif (vlen!==0) {\n\t\tfor (let i=0; i<vlen; i++) {\n\t\t\tvchild = vchildren[i];\n\t\t\tchild = null;\n\n\t\t\t// attempt to find a node based on key matching\n\t\t\tlet key = vchild.key;\n\t\t\tif (key!=null) {\n\t\t\t\tif (keyedLen && keyed[key]!==undefined) {\n\t\t\t\t\tchild = keyed[key];\n\t\t\t\t\tkeyed[key] = undefined;\n\t\t\t\t\tkeyedLen--;\n\t\t\t\t}\n\t\t\t}\n\t\t\t// attempt to pluck a node of the same type from the existing children\n\t\t\telse if (min<childrenLen) {\n\t\t\t\tfor (j=min; j<childrenLen; j++) {\n\t\t\t\t\tif (children[j]!==undefined && isSameNodeType(c = children[j], vchild, isHydrating)) {\n\t\t\t\t\t\tchild = c;\n\t\t\t\t\t\tchildren[j] = undefined;\n\t\t\t\t\t\tif (j===childrenLen-1) childrenLen--;\n\t\t\t\t\t\tif (j===min) min++;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// morph the matched/found/created DOM child to match vchild (deep)\n\t\t\tchild = idiff(child, vchild, context, mountAll);\n\n\t\t\tf = originalChildren[i];\n\t\t\tif (child && child!==dom && child!==f) {\n\t\t\t\tif (f==null) {\n\t\t\t\t\tdom.appendChild(child);\n\t\t\t\t}\n\t\t\t\telse if (child===f.nextSibling) {\n\t\t\t\t\tremoveNode(f);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tdom.insertBefore(child, f);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\n\t// remove unused keyed children:\n\tif (keyedLen) {\n\t\tfor (let i in keyed) if (keyed[i]!==undefined) recollectNodeTree(keyed[i], false);\n\t}\n\n\t// remove orphaned unkeyed children:\n\twhile (min<=childrenLen) {\n\t\tif ((child = children[childrenLen--])!==undefined) recollectNodeTree(child, false);\n\t}\n}\n\n\n\n/**\n * Recursively recycle (or just unmount) a node and its descendants.\n * @param {import('../dom').PreactElement} node DOM node to start\n *  unmount/removal from\n * @param {boolean} [unmountOnly=false] If `true`, only triggers unmount\n *  lifecycle, skips removal\n */\nexport function recollectNodeTree(node, unmountOnly) {\n\tlet component = node._component;\n\tif (component) {\n\t\t// if node is owned by a Component, unmount that component (ends up recursing back here)\n\t\tunmountComponent(component);\n\t}\n\telse {\n\t\t// If the node's VNode had a ref function, invoke it with null here.\n\t\t// (this is part of the React spec, and smart for unsetting references)\n\t\tif (node[ATTR_KEY]!=null && node[ATTR_KEY].ref) node[ATTR_KEY].ref(null);\n\n\t\tif (unmountOnly===false || node[ATTR_KEY]==null) {\n\t\t\tremoveNode(node);\n\t\t}\n\n\t\tremoveChildren(node);\n\t}\n}\n\n\n/**\n * Recollect/unmount all children.\n *\t- we use .lastChild here because it causes less reflow than .firstChild\n *\t- it's also cheaper than accessing the .childNodes Live NodeList\n */\nexport function removeChildren(node) {\n\tnode = node.lastChild;\n\twhile (node) {\n\t\tlet next = node.previousSibling;\n\t\trecollectNodeTree(node, true);\n\t\tnode = next;\n\t}\n}\n\n\n/**\n * Apply differences in attributes from a VNode to the given DOM Element.\n * @param {import('../dom').PreactElement} dom Element with attributes to diff `attrs` against\n * @param {object} attrs The desired end-state key-value attribute pairs\n * @param {object} old Current/previous attributes (from previous VNode or\n *  element's prop cache)\n */\nfunction diffAttributes(dom, attrs, old) {\n\tlet name;\n\n\t// remove attributes no longer present on the vnode by setting them to undefined\n\tfor (name in old) {\n\t\tif (!(attrs && attrs[name]!=null) && old[name]!=null) {\n\t\t\tsetAccessor(dom, name, old[name], old[name] = undefined, isSvgMode);\n\t\t}\n\t}\n\n\t// add new & update changed attributes\n\tfor (name in attrs) {\n\t\tif (name!=='children' && name!=='innerHTML' && (!(name in old) || attrs[name]!==(name==='value' || name==='checked' ? dom[name] : old[name]))) {\n\t\t\tsetAccessor(dom, name, old[name], old[name] = attrs[name], isSvgMode);\n\t\t}\n\t}\n}\n","import { Component } from '../component';\n\n/**\n * Retains a pool of Components for re-use.\n * @type {Component[]}\n * @private\n */\nexport const recyclerComponents = [];\n\n\n/**\n * Create a component. Normalizes differences between PFC's and classful\n * Components.\n * @param {function} Ctor The constructor of the component to create\n * @param {object} props The initial props of the component\n * @param {object} context The initial context of the component\n * @returns {import('../component').Component}\n */\nexport function createComponent(Ctor, props, context) {\n\tlet inst, i = recyclerComponents.length;\n\n\tif (Ctor.prototype && Ctor.prototype.render) {\n\t\tinst = new Ctor(props, context);\n\t\tComponent.call(inst, props, context);\n\t}\n\telse {\n\t\tinst = new Component(props, context);\n\t\tinst.constructor = Ctor;\n\t\tinst.render = doRender;\n\t}\n\n\n\twhile (i--) {\n\t\tif (recyclerComponents[i].constructor===Ctor) {\n\t\t\tinst.nextBase = recyclerComponents[i].nextBase;\n\t\t\trecyclerComponents.splice(i, 1);\n\t\t\treturn inst;\n\t\t}\n\t}\n\n\treturn inst;\n}\n\n\n/** The `.render()` method for a PFC backing instance. */\nfunction doRender(props, state, context) {\n\treturn this.constructor(props, context);\n}\n","import { SYNC_RENDER, NO_RENDER, FORCE_RENDER, ASYNC_RENDER, ATTR_KEY } from '../constants';\nimport options from '../options';\nimport { extend } from '../util';\nimport { enqueueRender } from '../render-queue';\nimport { getNodeProps } from './index';\nimport { diff, mounts, diffLevel, flushMounts, recollectNodeTree, removeChildren } from './diff';\nimport { createComponent, recyclerComponents } from './component-recycler';\nimport { removeNode } from '../dom/index';\n\n/**\n * Set a component's `props` and possibly re-render the component\n * @param {import('../component').Component} component The Component to set props on\n * @param {object} props The new props\n * @param {number} renderMode Render options - specifies how to re-render the component\n * @param {object} context The new context\n * @param {boolean} mountAll Whether or not to immediately mount all components\n */\nexport function setComponentProps(component, props, renderMode, context, mountAll) {\n\tif (component._disable) return;\n\tcomponent._disable = true;\n\n\tcomponent.__ref = props.ref;\n\tcomponent.__key = props.key;\n\tdelete props.ref;\n\tdelete props.key;\n\n\tif (typeof component.constructor.getDerivedStateFromProps === 'undefined') {\n\t\tif (!component.base || mountAll) {\n\t\t\tif (component.componentWillMount) component.componentWillMount();\n\t\t}\n\t\telse if (component.componentWillReceiveProps) {\n\t\t\tcomponent.componentWillReceiveProps(props, context);\n\t\t}\n\t}\n\n\tif (context && context!==component.context) {\n\t\tif (!component.prevContext) component.prevContext = component.context;\n\t\tcomponent.context = context;\n\t}\n\n\tif (!component.prevProps) component.prevProps = component.props;\n\tcomponent.props = props;\n\n\tcomponent._disable = false;\n\n\tif (renderMode!==NO_RENDER) {\n\t\tif (renderMode===SYNC_RENDER || options.syncComponentUpdates!==false || !component.base) {\n\t\t\trenderComponent(component, SYNC_RENDER, mountAll);\n\t\t}\n\t\telse {\n\t\t\tenqueueRender(component);\n\t\t}\n\t}\n\n\tif (component.__ref) component.__ref(component);\n}\n\n\n\n/**\n * Render a Component, triggering necessary lifecycle events and taking\n * High-Order Components into account.\n * @param {import('../component').Component} component The component to render\n * @param {number} [renderMode] render mode, see constants.js for available options.\n * @param {boolean} [mountAll] Whether or not to immediately mount all components\n * @param {boolean} [isChild] ?\n * @private\n */\nexport function renderComponent(component, renderMode, mountAll, isChild) {\n\tif (component._disable) return;\n\n\tlet props = component.props,\n\t\tstate = component.state,\n\t\tcontext = component.context,\n\t\tpreviousProps = component.prevProps || props,\n\t\tpreviousState = component.prevState || state,\n\t\tpreviousContext = component.prevContext || context,\n\t\tisUpdate = component.base,\n\t\tnextBase = component.nextBase,\n\t\tinitialBase = isUpdate || nextBase,\n\t\tinitialChildComponent = component._component,\n\t\tskip = false,\n\t\tsnapshot = previousContext,\n\t\trendered, inst, cbase;\n\n\tif (component.constructor.getDerivedStateFromProps) {\n\t\tstate = extend(extend({}, state), component.constructor.getDerivedStateFromProps(props, state));\n\t\tcomponent.state = state;\n\t}\n\n\t// if updating\n\tif (isUpdate) {\n\t\tcomponent.props = previousProps;\n\t\tcomponent.state = previousState;\n\t\tcomponent.context = previousContext;\n\t\tif (renderMode!==FORCE_RENDER\n\t\t\t&& component.shouldComponentUpdate\n\t\t\t&& component.shouldComponentUpdate(props, state, context) === false) {\n\t\t\tskip = true;\n\t\t}\n\t\telse if (component.componentWillUpdate) {\n\t\t\tcomponent.componentWillUpdate(props, state, context);\n\t\t}\n\t\tcomponent.props = props;\n\t\tcomponent.state = state;\n\t\tcomponent.context = context;\n\t}\n\n\tcomponent.prevProps = component.prevState = component.prevContext = component.nextBase = null;\n\tcomponent._dirty = false;\n\n\tif (!skip) {\n\t\trendered = component.render(props, state, context);\n\n\t\t// context to pass to the child, can be updated via (grand-)parent component\n\t\tif (component.getChildContext) {\n\t\t\tcontext = extend(extend({}, context), component.getChildContext());\n\t\t}\n\n\t\tif (isUpdate && component.getSnapshotBeforeUpdate) {\n\t\t\tsnapshot = component.getSnapshotBeforeUpdate(previousProps, previousState);\n\t\t}\n\n\t\tlet childComponent = rendered && rendered.nodeName,\n\t\t\ttoUnmount, base;\n\n\t\tif (typeof childComponent==='function') {\n\t\t\t// set up high order component link\n\n\t\t\tlet childProps = getNodeProps(rendered);\n\t\t\tinst = initialChildComponent;\n\n\t\t\tif (inst && inst.constructor===childComponent && childProps.key==inst.__key) {\n\t\t\t\tsetComponentProps(inst, childProps, SYNC_RENDER, context, false);\n\t\t\t}\n\t\t\telse {\n\t\t\t\ttoUnmount = inst;\n\n\t\t\t\tcomponent._component = inst = createComponent(childComponent, childProps, context);\n\t\t\t\tinst.nextBase = inst.nextBase || nextBase;\n\t\t\t\tinst._parentComponent = component;\n\t\t\t\tsetComponentProps(inst, childProps, NO_RENDER, context, false);\n\t\t\t\trenderComponent(inst, SYNC_RENDER, mountAll, true);\n\t\t\t}\n\n\t\t\tbase = inst.base;\n\t\t}\n\t\telse {\n\t\t\tcbase = initialBase;\n\n\t\t\t// destroy high order component link\n\t\t\ttoUnmount = initialChildComponent;\n\t\t\tif (toUnmount) {\n\t\t\t\tcbase = component._component = null;\n\t\t\t}\n\n\t\t\tif (initialBase || renderMode===SYNC_RENDER) {\n\t\t\t\tif (cbase) cbase._component = null;\n\t\t\t\tbase = diff(cbase, rendered, context, mountAll || !isUpdate, initialBase && initialBase.parentNode, true);\n\t\t\t}\n\t\t}\n\n\t\tif (initialBase && base!==initialBase && inst!==initialChildComponent) {\n\t\t\tlet baseParent = initialBase.parentNode;\n\t\t\tif (baseParent && base!==baseParent) {\n\t\t\t\tbaseParent.replaceChild(base, initialBase);\n\n\t\t\t\tif (!toUnmount) {\n\t\t\t\t\tinitialBase._component = null;\n\t\t\t\t\trecollectNodeTree(initialBase, false);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (toUnmount) {\n\t\t\tunmountComponent(toUnmount);\n\t\t}\n\n\t\tcomponent.base = base;\n\t\tif (base && !isChild) {\n\t\t\tlet componentRef = component,\n\t\t\t\tt = component;\n\t\t\twhile ((t=t._parentComponent)) {\n\t\t\t\t(componentRef = t).base = base;\n\t\t\t}\n\t\t\tbase._component = componentRef;\n\t\t\tbase._componentConstructor = componentRef.constructor;\n\t\t}\n\t}\n\n\tif (!isUpdate || mountAll) {\n\t\tmounts.unshift(component);\n\t}\n\telse if (!skip) {\n\t\t// Ensure that pending componentDidMount() hooks of child components\n\t\t// are called before the componentDidUpdate() hook in the parent.\n\t\t// Note: disabled as it causes duplicate hooks, see https://github.com/developit/preact/issues/750\n\t\t// flushMounts();\n\n\t\tif (component.componentDidUpdate) {\n\t\t\tcomponent.componentDidUpdate(previousProps, previousState, snapshot);\n\t\t}\n\t\tif (options.afterUpdate) options.afterUpdate(component);\n\t}\n\n\twhile (component._renderCallbacks.length) component._renderCallbacks.pop().call(component);\n\n\tif (!diffLevel && !isChild) flushMounts();\n}\n\n\n\n/**\n * Apply the Component referenced by a VNode to the DOM.\n * @param {import('../dom').PreactElement} dom The DOM node to mutate\n * @param {import('../vnode').VNode} vnode A Component-referencing VNode\n * @param {object} context The current context\n * @param {boolean} mountAll Whether or not to immediately mount all components\n * @returns {import('../dom').PreactElement} The created/mutated element\n * @private\n */\nexport function buildComponentFromVNode(dom, vnode, context, mountAll) {\n\tlet c = dom && dom._component,\n\t\toriginalComponent = c,\n\t\toldDom = dom,\n\t\tisDirectOwner = c && dom._componentConstructor===vnode.nodeName,\n\t\tisOwner = isDirectOwner,\n\t\tprops = getNodeProps(vnode);\n\twhile (c && !isOwner && (c=c._parentComponent)) {\n\t\tisOwner = c.constructor===vnode.nodeName;\n\t}\n\n\tif (c && isOwner && (!mountAll || c._component)) {\n\t\tsetComponentProps(c, props, ASYNC_RENDER, context, mountAll);\n\t\tdom = c.base;\n\t}\n\telse {\n\t\tif (originalComponent && !isDirectOwner) {\n\t\t\tunmountComponent(originalComponent);\n\t\t\tdom = oldDom = null;\n\t\t}\n\n\t\tc = createComponent(vnode.nodeName, props, context);\n\t\tif (dom && !c.nextBase) {\n\t\t\tc.nextBase = dom;\n\t\t\t// passing dom/oldDom as nextBase will recycle it if unused, so bypass recycling on L229:\n\t\t\toldDom = null;\n\t\t}\n\t\tsetComponentProps(c, props, SYNC_RENDER, context, mountAll);\n\t\tdom = c.base;\n\n\t\tif (oldDom && dom!==oldDom) {\n\t\t\toldDom._component = null;\n\t\t\trecollectNodeTree(oldDom, false);\n\t\t}\n\t}\n\n\treturn dom;\n}\n\n\n\n/**\n * Remove a component from the DOM and recycle it.\n * @param {import('../component').Component} component The Component instance to unmount\n * @private\n */\nexport function unmountComponent(component) {\n\tif (options.beforeUnmount) options.beforeUnmount(component);\n\n\tlet base = component.base;\n\n\tcomponent._disable = true;\n\n\tif (component.componentWillUnmount) component.componentWillUnmount();\n\n\tcomponent.base = null;\n\n\t// recursively tear down & recollect high-order component children:\n\tlet inner = component._component;\n\tif (inner) {\n\t\tunmountComponent(inner);\n\t}\n\telse if (base) {\n\t\tif (base[ATTR_KEY] && base[ATTR_KEY].ref) base[ATTR_KEY].ref(null);\n\n\t\tcomponent.nextBase = base;\n\n\t\tremoveNode(base);\n\t\trecyclerComponents.push(component);\n\n\t\tremoveChildren(base);\n\t}\n\n\tif (component.__ref) component.__ref(null);\n}\n","import { FORCE_RENDER } from './constants';\nimport { extend } from './util';\nimport { renderComponent } from './vdom/component';\nimport { enqueueRender } from './render-queue';\n/**\n * Base Component class.\n * Provides `setState()` and `forceUpdate()`, which trigger rendering.\n * @typedef {object} Component\n * @param {object} props The initial component props\n * @param {object} context The initial context from parent components' getChildContext\n * @public\n *\n * @example\n * class MyFoo extends Component {\n *   render(props, state) {\n *     return <div />;\n *   }\n * }\n */\nexport function Component(props, context) {\n\tthis._dirty = true;\n\n\t/**\n\t * @public\n\t * @type {object}\n\t */\n\tthis.context = context;\n\n\t/**\n\t * @public\n\t * @type {object}\n\t */\n\tthis.props = props;\n\n\t/**\n\t * @public\n\t * @type {object}\n\t */\n\tthis.state = this.state || {};\n\n\tthis._renderCallbacks = [];\n}\n\n\nextend(Component.prototype, {\n\n\t/**\n\t * Update component state and schedule a re-render.\n\t * @param {object} state A dict of state properties to be shallowly merged\n\t * \tinto the current state, or a function that will produce such a dict. The\n\t * \tfunction is called with the current state and props.\n\t * @param {() => void} callback A function to be called once component state is\n\t * \tupdated\n\t */\n\tsetState(state, callback) {\n\t\tif (!this.prevState) this.prevState = this.state;\n\t\tthis.state = extend(\n\t\t\textend({}, this.state),\n\t\t\ttypeof state === 'function' ? state(this.state, this.props) : state\n\t\t);\n\t\tif (callback) this._renderCallbacks.push(callback);\n\t\tenqueueRender(this);\n\t},\n\n\n\t/**\n\t * Immediately perform a synchronous re-render of the component.\n\t * @param {() => void} callback A function to be called after component is\n\t * \tre-rendered.\n\t * @private\n\t */\n\tforceUpdate(callback) {\n\t\tif (callback) this._renderCallbacks.push(callback);\n\t\trenderComponent(this, FORCE_RENDER);\n\t},\n\n\n\t/**\n\t * Accepts `props` and `state`, and returns a new Virtual DOM tree to build.\n\t * Virtual DOM is generally constructed via [JSX](http://jasonformat.com/wtf-is-jsx).\n\t * @param {object} props Props (eg: JSX attributes) received from parent\n\t * \telement/component\n\t * @param {object} state The component's current state\n\t * @param {object} context Context object, as returned by the nearest\n\t *  ancestor's `getChildContext()`\n\t * @returns {import('./vnode').VNode | void}\n\t */\n\trender() {}\n\n});\n","import { diff } from './vdom/diff';\n\n/**\n * Render JSX into a `parent` Element.\n * @param {import('./vnode').VNode} vnode A (JSX) VNode to render\n * @param {import('./dom').PreactElement} parent DOM element to render into\n * @param {import('./dom').PreactElement} [merge] Attempt to re-use an existing DOM tree rooted at\n *  `merge`\n * @public\n *\n * @example\n * // render a div into <body>:\n * render(<div id=\"hello\">hello!</div>, document.body);\n *\n * @example\n * // render a \"Thing\" component into #foo:\n * const Thing = ({ name }) => <span>{ name }</span>;\n * render(<Thing name=\"one\" />, document.querySelector('#foo'));\n */\nexport function render(vnode, parent, merge) {\n\treturn diff(merge, vnode, {}, false, parent, false);\n}\n","import { h, h as createElement } from './h';\nimport { cloneElement } from './clone-element';\nimport { Component } from './component';\nimport { render } from './render';\nimport { rerender } from './render-queue';\nimport options from './options';\n\nexport default {\n\th,\n\tcreateElement,\n\tcloneElement,\n\tComponent,\n\trender,\n\trerender,\n\toptions\n};\n\nexport {\n\th,\n\tcreateElement,\n\tcloneElement,\n\tComponent,\n\trender,\n\trerender,\n\toptions\n};\n","export default {\n  AllAvailable: \"All Available\",\n  RuleOfHalf: \"Rule of Half\",\n  RuleOfThird: \"Rule of Third\"\n};\n","import { h, Component } from \"preact\";\nimport GasStrategy from \"./gas-strategy\";\n\nexport default class Result extends Component {\n  constructor(props) {\n    super(props);\n    this.totalAscentTime = 0;\n    this.litersNeeded = 0;\n    this.amountOfDivers = 2; //Always count total time for 2 divers\n    this.calculate(props);\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    return !isNaN(nextProps.maxDepth);\n  }\n\n  componentWillUpdate(nextProps, nextState) {\n    this.calculate(nextProps);\n  }\n\n  calculate(props) {\n    this.calculateAscentTime(props);\n    this.calculateMinimumGasLiters(props);\n    this.calculateGas();\n  }\n\n  calculateAscentTime(props) {\n    const { maxDepth } = props;\n    const minutesToHandleProblems = 1;\n    if (maxDepth <= 3) {\n      this.totalAscentTime =\n        (minutesToHandleProblems + 1) * this.amountOfDivers;\n      return;\n    }\n\n    if (maxDepth <= 6) {\n      this.totalAscentTime =\n        (minutesToHandleProblems + 2) * this.amountOfDivers;\n      return;\n    }\n\n    if (maxDepth <= 12) {\n      this.totalAscentTime =\n        (minutesToHandleProblems + 3) * this.amountOfDivers;\n      return;\n    }\n\n    if (maxDepth <= 15) {\n      this.totalAscentTime =\n        (minutesToHandleProblems + 4) * this.amountOfDivers;\n      return;\n    }\n\n    if (maxDepth > 15) {\n      const metresUpTo15 = maxDepth - 15;\n      const timeTo15 = Math.ceil(metresUpTo15 / 9); // 9metres / min up to 15m level\n      this.totalAscentTime =\n        (minutesToHandleProblems + timeTo15 + 4) * this.amountOfDivers; //4min extra for 15m-12m, 12m-6m, 6m-3m, 3m-surface\n      return;\n    }\n  }\n\n  calculateMinimumGasLiters(props) {\n    const averageDepthATA = Math.floor(props.maxDepth / 2) / 10 + 1;\n    const scr = 40; //40L/min: to accommodate conservatism, and to account for the increased breathing rate from encountering an issue on the dive.\n    this.litersNeeded = this.totalAscentTime * scr * averageDepthATA;\n  }\n\n  calculateGas() {\n    const { cylinderBarCapacity } = this.props;\n    const d12 = this.getMinBar(24);\n    const s12 = this.getMinBar(12);\n    const d11 = this.getMinBar(22);\n    const s11 = this.getMinBar(11);\n    const d10 = this.getMinBar(20);\n    const s10 = this.getMinBar(10);\n\n    this.minimumBarNeeded = {\n      d12: {\n        minBar: d12,\n        usableGas: cylinderBarCapacity - d12\n      },\n      s12: {\n        minBar: s12,\n        usableGas: cylinderBarCapacity - s12\n      },\n      d11: {\n        minBar: d11,\n        usableGas: cylinderBarCapacity - d11\n      },\n      s11: {\n        minBar: s11,\n        usableGas: cylinderBarCapacity - s11\n      },\n      d10: {\n        minBar: d10,\n        usableGas: cylinderBarCapacity - d10\n      },\n      s10: {\n        minBar: s10,\n        usableGas: cylinderBarCapacity - s10\n      }\n    };\n  }\n\n  getMinBar(cylinderLitres) {\n    const minimumBars = Math.floor(this.litersNeeded / cylinderLitres);\n    return minimumBars > 40 ? minimumBars : 40; //Minimum Gas can NEVER be less than 40 BAR due to the possible SPG inaccuracy at the lower ranges\n  }\n\n  render() {\n    if (typeof this.props.maxDepth !== \"number\" || this.props.maxDepth < 1)\n      return null;\n\n    return (\n      <div style={style.container}>\n        <p style={style.text}>\n          Ascent time from\n          <strong>\n            {this.props.maxDepth}m = {this.totalAscentTime} minutes\n          </strong>\n        </p>\n        <p style={style.text}>\n          <strong>{this.litersNeeded} L</strong> minimum gas needed.\n        </p>\n        <h2 style={style.h2}>Double 12L cylinders:</h2>\n        {this.renderMinGasText(this.minimumBarNeeded.d12.minBar)}\n        {this.renderUsableGasText(this.minimumBarNeeded.d12.usableGas)}\n\n        <h2 style={style.h2}>Single 12L cylinder:</h2>\n        {this.renderMinGasText(this.minimumBarNeeded.s12.minBar)}\n        {this.renderUsableGasText(this.minimumBarNeeded.s12.usableGas)}\n\n        <h2 style={style.h2}>Double 11L cylinders:</h2>\n        {this.renderMinGasText(this.minimumBarNeeded.d11.minBar)}\n        {this.renderUsableGasText(this.minimumBarNeeded.d11.usableGas)}\n\n        <h2 style={style.h2}>Single 11L cylinder:</h2>\n        {this.renderMinGasText(this.minimumBarNeeded.s11.minBar)}\n        {this.renderUsableGasText(this.minimumBarNeeded.s11.usableGas)}\n\n        <h2 style={style.h2}>Double 10L cylinders:</h2>\n        {this.renderMinGasText(this.minimumBarNeeded.d10.minBar)}\n        {this.renderUsableGasText(this.minimumBarNeeded.d10.usableGas)}\n\n        <h2 style={style.h2}>Single 10L cylinder:</h2>\n        {this.renderMinGasText(this.minimumBarNeeded.s10.minBar)}\n        {this.renderUsableGasText(this.minimumBarNeeded.s10.usableGas)}\n      </div>\n    );\n  }\n\n  renderMinGasText(minBarValue) {\n    return (\n      <p style={style.text}>\n        Minimum gas (for {this.amountOfDivers} divers):\n        <strong>{minBarValue} BAR</strong>\n      </p>\n    );\n  }\n\n  renderUsableGasText(usableGasValue) {\n    if (this.props.gasStrategy === GasStrategy.AllAvailable) {\n      return (\n        <p style={style.text}>\n          Usable gas ({this.props.gasStrategy}) :\n          <strong>{usableGasValue} BAR</strong>\n        </p>\n      );\n    }\n    if (this.props.gasStrategy === GasStrategy.RuleOfHalf) {\n      const modifiedUsableGas = Math.floor(usableGasValue / 2);\n      const turnPressure = this.props.cylinderBarCapacity - modifiedUsableGas;\n      return (\n        <p style={style.text}>\n          Usable gas ({this.props.gasStrategy}) :\n          <strong>{usableGasValue} BAR</strong>\n          <br />\n          Turn pressure: {turnPressure}\n        </p>\n      );\n    }\n    if (this.props.gasStrategy === GasStrategy.RuleOfThird) {\n      const modifiedUsableGas = Math.floor(usableGasValue / 3);\n      const turnPressure = this.props.cylinderBarCapacity - modifiedUsableGas;\n      return (\n        <p style={style.text}>\n          Usable gas ({this.props.gasStrategy}) :\n          <strong>{usableGasValue} BAR</strong>\n          <br />\n          Turn pressure: {turnPressure}\n          <br />\n          Emergency gas: {modifiedUsableGas}\n        </p>\n      );\n    }\n    return null;\n  }\n}\n\nconst style = {\n  container: {\n    backgroundColor: \"#08689b\",\n    padding: \"10px\",\n    borderRadius: \"10px\"\n  },\n  h2: {\n    fontSize: \"22px\",\n    fontFamily: \"Arial\",\n    marginBottom: \"0\"\n  },\n  text: {\n    fontSize: \"18px\",\n    fontFamily: \"Arial\",\n    margin: \"0 0 2px 0\"\n  }\n};\n","import { h, Component } from \"preact\";\nimport Result from \"./result\";\nimport GasStrategy from \"./gas-strategy\";\n\nexport default class Ascent extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      maxDepth: 0,\n      cylinderBarCapacity: 200,\n      gasStrategy: GasStrategy.AllAvailable\n    };\n    this.onDepthChange = this.onDepthChange.bind(this);\n    this.onCylinderBarCapacityChange = this.onCylinderBarCapacityChange.bind(\n      this\n    );\n    this.onGasStrategyChange = this.onGasStrategyChange.bind(this);\n  }\n\n  onDepthChange(event) {\n    let parsedInput = 0;\n    try {\n      parsedInput = parseInt(event.target.value);\n    } catch (e) {\n      //Ignore\n    }\n    this.setState({ maxDepth: parsedInput });\n  }\n\n  onCylinderBarCapacityChange(event) {\n    let parsedInput = 0;\n    try {\n      parsedInput = parseInt(event.target.value);\n    } catch (e) {\n      //Ignore\n    }\n    this.setState({ cylinderBarCapacity: parsedInput });\n  }\n\n  onGasStrategyChange(event) {\n    this.setState({ gasStrategy: event.target.value });\n  }\n\n  render() {\n    return (\n      <div style={style.container}>\n        <h1>Ascent calculator - EAN32</h1>\n        <input\n          style={style.input}\n          type=\"number\"\n          min=\"0\"\n          max=\"40\"\n          value={this.state.maxDepth}\n          placeholder=\"Max depth metres?\"\n          onKeyUp={this.onDepthChange}\n        />\n        <input\n          style={style.input}\n          type=\"number\"\n          min=\"0\"\n          max=\"300\"\n          value={this.state.cylinderBarCapacity}\n          placeholder=\"Cylinder bar capacity?\"\n          onKeyUp={this.onCylinderBarCapacityChange}\n        />\n        <select\n          style={style.select}\n          value={this.state.gasStrategy}\n          onChange={this.onGasStrategyChange}\n        >\n          <option value={GasStrategy.AllAvailable}>\n            {GasStrategy.AllAvailable}\n          </option>\n          <option value={GasStrategy.RuleOfHalf}>\n            {GasStrategy.RuleOfHalf}\n          </option>\n          <option value={GasStrategy.RuleOfThird}>\n            {GasStrategy.RuleOfThird}\n          </option>\n        </select>\n        <Result\n          maxDepth={this.state.maxDepth}\n          cylinderBarCapacity={this.state.cylinderBarCapacity}\n          gasStrategy={this.state.gasStrategy}\n        />\n      </div>\n    );\n  }\n}\n\nconst style = {\n  container: {\n    backgroundColor: \"#08689b\",\n    color: \"white\",\n    padding: \"10px\",\n    borderRadius: \"10px\"\n  },\n  input: {\n    fontSize: \"18px\",\n    fontFamily: \"Arial\",\n    padding: \"4px\",\n    border: \"1px solid gray\",\n    minWidth: \"80px\",\n    marginRight: \"10px\",\n    borderRadius: \"6px\"\n  },\n  select: {\n    fontSize: \"18px\",\n    fontFamily: \"Arial\",\n    border: \"1px solid gray\",\n    marginRight: \"10px\"\n  }\n};\n","import { h, render, Component } from \"preact\";\nimport Ascent from \"./components/ascent/ascent\";\n\nclass GueApp extends Component {\n  render() {\n    return <Ascent />;\n  }\n}\n\nrender(<GueApp />, document.getElementById(\"gue-app\"));\n"]}